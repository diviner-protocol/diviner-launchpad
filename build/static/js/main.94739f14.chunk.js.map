{"version":3,"sources":["components/static/GlobalModal.jsx","utils/formatNumber.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","connectors/bsc/bscConnector.ts","connectors/NetworkConnector.ts","constants/index.ts","connectors/index.ts","utils/providers.ts","utils/getRpcUrl.ts","hooks/index.ts","utils/wallet.ts","utils/web3React.ts","state/application/actions.ts","state/application/reducer.ts","config/index.ts","state/transactions/reducer.ts","config/constants/tokens.ts","config/constants/contracts.ts","utils/addressHelpers.ts","utils/apy.ts","utils/contractHelpers.ts","utils/multicall.ts","state/staking/fetchGameUserData.ts","config/constants/staking.ts","state/staking/fetchPools.ts","state/staking/index.ts","state/transactions/actions.ts","constants/lists.ts","state/global/actions.ts","state/lists/actions.ts","state/lists/reducer.ts","state/index.ts","hooks/useAuth.ts","hooks/useEagerConnect.ts","hooks/useWeb3ReactManager.ts","components/Social/index.tsx","views/Project/Components/ItemProjects.tsx","views/Project/Components/IdoProcess.tsx","views/Project/Components/Purchase.tsx","views/Project/Components/ListProject.tsx","views/Project/Components/PdfScroll.tsx","views/Project/index.tsx","views/HomePage/Components/Banner.tsx","views/HomePage/index.tsx","config/constants/walletsMarket.ts","components/Modal/ConnectWalletModal.tsx","components/Header.jsx","components/Button/index.tsx","state/transactions/hooks.tsx","utils/index.ts","constants/abis/erc20.ts","constants/multicall/index.ts","hooks/useContract.ts","hooks/useApprove.ts","hooks/useStaking.ts","views/Staking/Components/PoolCard.tsx","state/staking/selector.ts","views/Staking/Components/StakingColumn.tsx","views/Staking/index.tsx","App.tsx","state/hook.ts","contexts/ThemeContext.tsx","Providers.tsx","index.tsx"],"names":["GlobalModal","props","timeoutUpdateVisibility","undefined","state","visible","animateClassName","modalProps","myComponentInstance","ModalUI","options","clearTimeout","this","setTimeout","setState","children","animateOut","style","onPressBackground","hide","autoScale","GlobalModalStyled","onPress","className","onClick","e","stopPropagation","_show","_hide","Component","show","styled","div","maxNumberAfterDot","s","n","decimalPart","substring","lastIndexOf","addCommas","nStr","x","split","x1","x2","length","rgx","test","replace","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","a","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","parseSendReturn","sendReturn","hasOwnProperty","result","NoBscProviderError","name","constructor","message","Error","UserRejectedRequestError","BscConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","window","localStorage","setItem","toString","emitUpdate","provider","BinanceChain","accounts","emitDeactivate","account","networkId","on","isMetaMask","autoRefreshOnNetworkChange","send","then","code","warning","enable","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","removeListener","AbstractConnector","RequestError","data","MiniRpcProvider","url","batchWaitTimeMs","host","path","nextId","batchTimeoutId","batch","clearBatch","console","info","fetch","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","reduce","memo","current","id","sendAsync","callback","params","jsonrpc","catch","error","promise","Promise","resolve","push","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","invariant","Object","keys","supportedChainIds","k","Number","providers","currentChainId","accumulator","DAI","Token","ChainId","BSC","BUSD","USDT","UST","WETH_ONLY","WNATIVE","BSC_TESTNET","MATIC","MATIC_TESTNET","BIPS_BASE","Percent","JSBI","BigInt","RPC_URLS","exponentiate","BLOCK_EXPLORER_URLS","NETWORKS","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","ALL_SUPPORTED_CHAIN_IDS","RPC","network","parseInt","injected","InjectedConnector","bscConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","RPC_URL","randomIndex","random","getRpcUrl","process","simpleRpcProvider","ethers","JsonRpcProvider","useActiveWeb3React","useWeb3React","library","web3React","refEth","useRef","setProvider","setupNetwork","ethereum","connectorsByName","ConnectorNames","Injected","WalletConnect","getLibrary","Web3Provider","pollingInterval","getChainId","getItem","updateBlockNumber","createAction","toggleWalletModal","toggleSettingsMenu","addPopup","removePopup","createReducer","blockNumber","popupList","walletModalOpen","settingsMenuOpen","builder","addCase","action","payload","Math","max","content","key","removeAfterMs","filter","popup","concat","nanoid","p","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","TransactionStatus","DPT_PER_BLOCK","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","DPT_PRICE","times","tokens","bnb","projectLink","cake","address","wbnb","dptBnb","dpt","dgt","busd","usdtBusdLp","mulltiCall","staking","prediction","game","character","equipment","priceOracle","gameWiki","faucet","market","tokenTransferProxy","nftsTransferProxy","fakeCharacter","buyChest","getAddress","getStakingAddress","addresses","getPoolApy","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apy","isNaN","isFinite","toNumber","getContract","abi","signer","signerOrProvider","Contract","getMulticallContract","multicall","getStakingContract","stakingAbi","calls","requireSuccess","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","tryAggregate","returnData","res","i","decodeFunctionResult","fetchGameUserTokenInfo","dptToken","lpToken","erc20ABI","dptBalance","lpBalance","dptAllowance","lpAllowance","log","fetchUserPoolData","results","amountStaked","amount","firstTimeDeposit","fetchPoolDataWithPoolId","poolId","stakingContract","getUserPoolInfoPromise","users","getPoolInfoPromise","pools","pendingRewardPromise","pendingReward","all","userPoolInfo","poolInfo","parseFloat","formatEther","totalAmount","rewardPerBlock","fetchPendingReward","fetchPendingRewardWithPoolId","pendingInterest","stakingConfig","title","fetchPools","pool","index","lockingTime","endBlock","timeLocking","gameSlice","createSlice","initialState","userData","userTokenData","userPoolData","isLoading","reducers","setIsLoading","setPendingRewardToZero","resetUserData","extraReducers","fetchGameUserData","pending","fulfilled","pendingRewards","fetchUserTokenData","fetchPoolsData","fetchPoolWithId","fetchPendingRewardAllPool","createAsyncThunk","fetchGameUserTokenInfoPromise","fetchGameUserInfoPromise","fetchPendingRewardPromise","actions","addTransaction","clearTransaction","finalizeTransaction","errorTransaction","transactionsSlicer","transactions","callData","success","DEFAULT_TOKEN_LIST_URL","DEFAULT_LIST_OF_LISTS","updateVersion","fetchTokenList","rejected","acceptListUpdate","addList","removeList","selectList","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","DEFAULT_LIST","selectedListUrl","requestId","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","errorMessage","lastInitializedSet","l","add","Set","newListOfListsSet","has","load","states","user","store","configureStore","devTools","reducer","application","lists","useAppDispatch","useDispatch","useAuth","activate","deactivate","login","useCallback","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","alert","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","logout","close","_binanceChainListener","defineProperty","get","bsc","set","useEagerConnect","active","tried","setTried","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useWeb3ReactManager","networkActive","networkError","activateNetwork","triedEager","suppress","useWeb3ReactCore","useInactiveListener","SocialStyled","Social","href","target","rel","src","alt","ItemProjectStyled","Item","ItemProject","Step","Steps","BoxProcess","IdoProcess","percent","description","direction","PurchaseStyled","Purchase","type","defaultValue","suffix","TabPane","Tabs","BoxTabs","WrapStyled","LeftContent","RightContent","ListProject","defaultActiveKey","onChange","tab","PdfSrollStyled","PdfSroll","ProjectStyled","TwoColumn","Project","PdfScroll","BannerStyled","CharactorStyled","CoinStyled","ContentStyled","theme","mediaQueries","sm","Banner","HomePageStyled","HomePage","connectorsMarket","icon","BlockConnect","ConnectWalletModal","onClose","img","BoxMenu","colors","white","Burger","HeaderStyled","Header","bnbBalance","busdBalance","isCollapsed","setIsCollapsed","scroll","setScroll","addEventListener","scrollY","trimAccount","slice","to","exact","ButtonStyles","MyButton","Name","disabled","isAddress","calculateGasMargin","mul","from","ABI","AddressZero","getSigner","connectUnchecked","getProviderOrSigner","ERC20_ABI","useContract","withSignerIfPossible","useMemo","useApproveCallbackCustom","token","addressNeedApprove","tokenContract","dispatch","useTransactionAdder","estimateGas","approve","MaxUint256","estimatedGas","gasLimit","debug","useStake","useStakingContract","handleStake","parseEther","deposit","txHash","onStake","onClaim","withdraw","onWithdraw","PoolCard","isApproving","setIsApproving","isStaking","setIsStaking","isClaiming","setIsClaiming","isWithdrawing","setWithdrawing","depositValue","setDepositValue","useSelector","onApproveAngel","handleApprove","tx","wait","handleClaim","handleWithdraw","Date","toLocaleDateString","controls","min","addonBefore","addonAfter","now","paddingBottom","StakingStyled","Staking","stakingList","PageStakingStyled","PageStaking","dptPools","lpPools","App","warn","setLoading","userTokensInfo","FullScreenStyled","Space","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","parse","setIsDark","prevState","dark","light","Web3ProviderNetwork","createWeb3ReactRoot","Providers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94739f14.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nexport default class GlobalModal extends Component {\n  static myComponentInstance\n\n  // eslint-disable-next-line react/sort-comp\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      visible: false,\n      animateClassName: undefined,\n      modalProps: {},\n    }\n\n    GlobalModal.myComponentInstance = this\n  }\n\n  static show(...param) {\n    GlobalModal.myComponentInstance._show(...param)\n  }\n\n  static hide() {\n    GlobalModal.myComponentInstance._hide()\n  }\n\n  timeoutUpdateVisibility = undefined // cannot run show & close the same time\n\n  _show(ModalUI, options = {}) {\n    clearTimeout(this.timeoutUpdateVisibility)\n    this.timeoutUpdateVisibility = setTimeout(() => {\n      this.setState(() => ({\n        visible: true,\n        animateClassName: 'animate-in',\n        modalProps: { children: ModalUI, ...options },\n      }))\n      setTimeout(() => {\n        this.setState(() => ({ animateClassName: undefined }))\n      }, 200)\n    }, 0)\n  }\n\n  _hide() {\n    clearTimeout(this.timeoutUpdateVisibility)\n    this.timeoutUpdateVisibility = setTimeout(() => {\n      this.setState(() => ({ animateClassName: 'animate-out' }))\n      setTimeout(() => {\n        this.setState(() => ({ visible: false, animateOut: false }))\n      }, 200)\n    }, 0)\n  }\n\n  render() {\n    const { modalProps = {}, visible, animateOut, animateClassName } = this.state\n    if (!visible) return null\n\n    const { style, children, onPressBackground = hide, autoScale = true, ...restProps } = modalProps\n    return (\n      <GlobalModalStyled onPress={onPressBackground} className={animateClassName}>\n        <div className=\"dimmer\" onClick={onPressBackground} />\n        <div className=\"center-modal\" onClick={(e) => e.stopPropagation()}>\n          {children}\n        </div>\n      </GlobalModalStyled>\n    )\n  }\n}\nexport const show = GlobalModal.show\nexport const hide = GlobalModal.hide\n\nconst GlobalModalStyled = styled.div`\n  position: absolute;\n  z-index: 100;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  @keyframes zoomIn {\n    0% {\n      transform: translate(-50%, -50%) scale(0.5);\n    }\n    90% {\n      transform: translate(-50%, -50%) scale(1.01);\n    }\n    100% {\n      transform: translate(-50%, -50%) scale(1);\n    }\n  }\n\n  @keyframes faceIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  .dimmer {\n    background-color: rgba(48, 48, 48, 0.6);\n    width: 100%;\n    height: 100%;\n  }\n\n  .center-modal {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  &.animate-in {\n    .dimmer {\n      animation-name: faceIn;\n      animation-duration: 0.3s;\n    }\n    .center-modal {\n      animation-name: zoomIn, faceIn;\n      animation-duration: 0.2s;\n    }\n  }\n  &.animate-out {\n    .dimmer {\n      animation-name: faceIn;\n    }\n    .center-modal {\n      animation-name: zoomIn, faceIn;\n    }\n    .dimmer,\n    .center-modal {\n      animation-duration: 0.2s;\n      animation-direction: reverse;\n      animation-fill-mode: forwards;\n    }\n  }\n`\n","import BigNumber from 'bignumber.js';\n\nexport const formatUnits = (n: BigNumber, s: number): BigNumber => {\n\treturn new BigNumber(n).div(10 ** s);\n};\n\nexport const plus = (a: string, b: string): BigNumber => {\n\treturn new BigNumber(a).plus(new BigNumber(b));\n};\n\nexport const maxNumberAfterDot = (s: string, n: number) => {\n\tconst decimalPart = s.substring(s.lastIndexOf('.') + 1);\n\tif (!decimalPart) return s;\n\tconst roundedPart = s.substring(0, s.lastIndexOf('.'));\n\n\treturn roundedPart + '.' + decimalPart.substring(0, n);\n};\n\nexport function addCommas(nStr) {\n\tnStr += '';\n\tconst x = nStr.split('.');\n\tlet x1 = x[0];\n\tconst x2 = x.length > 1 ? '.' + x[1] : '';\n\tconst rgx = /(\\d+)(\\d{3})/;\n\twhile (rgx.test(x1)) {\n\t\tx1 = x1.replace(rgx, '$1,$2');\n\t}\n\treturn x1 + x2;\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { AbstractConnectorArguments, ConnectorUpdate } from \"@web3-react/types\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport warning from \"tiny-warning\";\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  // eslint-disable-next-line no-prototype-builtins\n  return sendReturn.hasOwnProperty(\"result\") ? sendReturn.result : sendReturn;\n}\n\nexport class NoBscProviderError extends Error {\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = \"No BSC provider was found on window.BinanceChain.\";\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = \"The user rejected the request.\";\n  }\n}\n\nexport class BscConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs);\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    window.localStorage.setItem(\"chainId\", chainId.toString());\n    this.emitUpdate({ chainId, provider: window.BinanceChain } as any);\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({ account: accounts[0] });\n    }\n  }\n\n  private handleClose(): void {\n    this.emitDeactivate();\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    this.emitUpdate({ chainId: networkId, provider: window.BinanceChain });\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n\n    if (window.BinanceChain.on) {\n      window.BinanceChain.on(\"chainChanged\", this.handleChainChanged);\n      window.BinanceChain.on(\"accountsChanged\", this.handleAccountsChanged);\n      window.BinanceChain.on(\"close\", this.handleClose);\n      window.BinanceChain.on(\"networkChanged\", this.handleNetworkChanged);\n    }\n\n    if ((window.BinanceChain as any).isMetaMask) {\n      (window.BinanceChain as any).autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      account = await (window.BinanceChain.send as Send)(\n        \"eth_requestAccounts\"\n      ).then((sendReturn) => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(\n        false,\n        \"eth_requestAccounts was unsuccessful, falling back to enable\"\n      );\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.BinanceChain.enable().then(\n        (sendReturn) => sendReturn && parseSendReturn(sendReturn)[0]\n      );\n    }\n\n    return { provider: window.BinanceChain, ...(account ? { account } : {}) };\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.BinanceChain;\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n\n    let chainId;\n    try {\n      chainId = await (window.BinanceChain.send as Send)(\"eth_chainId\").then(\n        parseSendReturn\n      );\n    } catch {\n      warning(\n        false,\n        \"eth_chainId was unsuccessful, falling back to net_version\"\n      );\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.BinanceChain.send as Send)(\"net_version\").then(\n          parseSendReturn\n        );\n      } catch {\n        warning(\n          false,\n          \"net_version was unsuccessful, falling back to net version v2\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn(\n          (window.BinanceChain.send as SendOld)({ method: \"net_version\" })\n        );\n      } catch {\n        warning(\n          false,\n          \"net_version v2 was unsuccessful, falling back to manual matches and static properties\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      if ((window.BinanceChain as any).isDapper) {\n        chainId = parseSendReturn(\n          (window.BinanceChain as any).cachedResults.net_version\n        );\n      } else {\n        chainId =\n          (window.BinanceChain as any).chainId ||\n          (window.BinanceChain as any).netVersion ||\n          (window.BinanceChain as any).networkVersion ||\n          (window.BinanceChain as any)._chainId;\n      }\n    }\n\n    return chainId;\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n\n    let account;\n    try {\n      account = await (window.BinanceChain.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      );\n    } catch {\n      warning(false, \"eth_accounts was unsuccessful, falling back to enable\");\n    }\n\n    if (!account) {\n      try {\n        account = await window.BinanceChain.enable().then(\n          (sendReturn) => parseSendReturn(sendReturn)[0]\n        );\n      } catch {\n        warning(\n          false,\n          \"enable was unsuccessful, falling back to eth_accounts v2\"\n        );\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn(\n        (window.BinanceChain.send as SendOld)({ method: \"eth_accounts\" })\n      )[0];\n    }\n\n    return account;\n  }\n\n  public deactivate() {\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\n      window.BinanceChain.removeListener(\n        \"chainChanged\",\n        this.handleChainChanged\n      );\n      window.BinanceChain.removeListener(\n        \"accountsChanged\",\n        this.handleAccountsChanged\n      );\n      window.BinanceChain.removeListener(\"close\", this.handleClose);\n      window.BinanceChain.removeListener(\n        \"networkChanged\",\n        this.handleNetworkChanged\n      );\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.BinanceChain) {\n      return false;\n    }\n\n    try {\n      return await (window.BinanceChain.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          }\n          return false;\n        }\n      );\n    } catch {\n      return false;\n    }\n  }\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n\n  public readonly chainId: number\n\n  public readonly url: string\n\n  public readonly host: string\n\n  public readonly path: string\n\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch)\n    const { batch } = this\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    // eslint-disable-next-line no-restricted-syntax\n    // for (const result of json) {\n    //   const {\n    //     resolve,\n    //     reject,\n    //     request: { method },\n    //   } = byKey[result.id]\n    //   if (resolve && reject) {\n    //     if ('error' in result) {\n    //       reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n    //     } else if ('result' in result) {\n    //       resolve(result.result)\n    //     } else {\n    //       reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n    //     }\n    //   }\n    // }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void,\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any,\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return null\n  }\n}\n\nexport default NetworkConnector\n","import { JSBI, Percent, Token, ChainId, WNATIVE } from '@diviner-protocol/v2-sdk'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId: number]: Token[]\n}\n\nexport const DAI = new Token(ChainId.BSC, '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', 18, 'DAI', 'Dai Stablecoin')\nexport const BUSD = new Token(ChainId.BSC, '0xe9e7cea3dedca5984780bafc599bd69add087d56', 18, 'BUSD', 'Binance USD')\nexport const USDT = new Token(ChainId.BSC, '0x55d398326f99059ff775485246999027b3197955', 18, 'USDT', 'Tether USD')\nexport const UST = new Token(ChainId.BSC, '0x23396cf899ca06c4472205fc903bdb4de249d6fc', 18, 'UST', 'Wrapped UST Token')\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.BSC]: [WNATIVE[ChainId.BSC]],\n  [ChainId.BSC_TESTNET]: [WNATIVE[ChainId.BSC_TESTNET]],\n  [ChainId.MATIC]: [WNATIVE[ChainId.MATIC]],\n  [ChainId.MATIC_TESTNET]: [WNATIVE[ChainId.MATIC_TESTNET]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.BSC]: [...WETH_ONLY[ChainId.BSC], DAI, BUSD, USDT, UST],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.BSC]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.BSC]: [...WETH_ONLY[ChainId.BSC], DAI, BUSD, USDT],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.BSC]: [...WETH_ONLY[ChainId.BSC], DAI, BUSD, USDT],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.BSC]: [\n    [\n      new Token(ChainId.BSC, '0x43bd1Db5b882b081cCbA03CA26311e3Fa9f69924', 18, 'BSCS', 'BSCSswap-Test Token'),\n      new Token(ChainId.BSC, '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n    ],\n    [BUSD, USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n\nexport const RPC_URLS: {\n  [chainId in ChainId]?: string[]\n} = {\n  [ChainId.BSC]: [\n    'https://bsc-dataseed.binance.org/',\n    'https://bsc-dataseed1.defibit.io/',\n    'https://bsc-dataseed1.ninicoin.io/',\n  ],\n  [ChainId.BSC_TESTNET]: [\n    // 'https://data-seed-prebsc-2-s3.binance.org:8545/',\n    // 'https://speedy-nodes-nyc.moralis.io/5ba923ae20cc2c0509504eaa/bsc/testnet',\n    // 'https://data-seed-prebsc-1-s2.binance.org:8545/',\n    // 'https://data-seed-prebsc-1-s2.binance.org:8545/',\n    // 'https://data-seed-prebsc-2-s2.binance.org:8545/',\n    // 'https://data-seed-prebsc-1-s3.binance.org:8545/',\n    'https://speedy-nodes-nyc.moralis.io/5ba923ae20cc2c0509504eaa/bsc/testnet',\n  ],\n}\n\nexport const BLOCK_EXPLORER_URLS: {\n  [chainId in ChainId]?: string[]\n} = {\n  [ChainId.BSC]: ['https://bscscan.com'],\n  [ChainId.BSC_TESTNET]: ['https://testnet.bscscan.com/'],\n}\n\nexport const SCAN_SITES: {\n  [chainId in ChainId]?: string\n} = {\n  [ChainId.BSC]: 'bscscan',\n  [ChainId.BSC_TESTNET]: 'bscscan',\n}\n\nexport const NETWORKS: {\n  [chainId in ChainId]?: any\n} = {\n  [ChainId.BSC]: {\n    chainId: `0x${ChainId.BSC.toString(16)}`,\n    chainName: 'Binance Smart Chain Mainnet',\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'bnb',\n      decimals: 18,\n    },\n    rpcUrls: RPC_URLS[ChainId.BSC],\n    blockExplorerUrls: BLOCK_EXPLORER_URLS[ChainId.BSC],\n  },\n  [ChainId.BSC_TESTNET]: {\n    chainId: `0x${ChainId.BSC_TESTNET.toString(16)}`,\n    chainName: 'Binance Smart Chain Testnet',\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'bnb',\n      decimals: 18,\n    },\n    rpcUrls: RPC_URLS[ChainId.BSC_TESTNET],\n    blockExplorerUrls: BLOCK_EXPLORER_URLS[ChainId.BSC_TESTNET],\n  },\n}\n\nexport const ALL_SUPPORTED_CHAIN_IDS: ChainId[] = [ChainId.BSC_TESTNET] // Todo: supported chainId\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@diviner-protocol/v2-sdk'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport getLibrary from 'utils/getLibrary'\nimport { BscConnector } from './bsc/bscConnector'\nimport { NetworkConnector } from './NetworkConnector'\nimport { ALL_SUPPORTED_CHAIN_IDS } from '../constants/index'\n\nconst RPC = {\n  [ChainId.BSC]: 'https://bsc-dataseed.binance.org/',\n  [ChainId.BSC_TESTNET]: 'https://data-seed-prebsc-2-s3.binance.org:8545',\n}\n\nexport const NETWORK_CHAIN_ID: number = parseInt('56' ?? '56')\n\nexport const network = new NetworkConnector({\n  urls: RPC,\n  defaultChainId: 56,\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? getLibrary(network.provider))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: ALL_SUPPORTED_CHAIN_IDS,\n})\n\nexport const bscConnector = new BscConnector({ supportedChainIds: [56, 97] })\n\nexport const walletconnect = new WalletConnectConnector({\n  supportedChainIds: ALL_SUPPORTED_CHAIN_IDS,\n  rpc: RPC,\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n})\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl(process.env.REACT_APP_CHAIN_ID as any)\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { ChainId } from '@diviner-protocol/v2-sdk'\nimport random from 'lodash/random'\nimport { RPC_URLS } from '../constants'\n\n// Array of available nodes to connect to\n\nconst getNodeUrl = (chainId?: ChainId) => {\n  try {\n    const randomIndex = random(0, RPC_URLS[chainId].length - 1)\n    const nodeUrl = RPC_URLS[chainId][randomIndex]\n    return nodeUrl\n  } catch (error) {\n    return RPC_URLS[ChainId.BSC][0]\n  }\n}\n\nexport default getNodeUrl\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@diviner-protocol/v2-sdk'\nimport { useWeb3React, useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useRef, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { injected } from '../connectors'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else if (isMobile && window.ethereum) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch((e) => {\n          console.error('Failed to activate after chain changed', e)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((e) => {\n            console.error('Failed to activate after accounts changed', e)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { ChainId } from '@diviner-protocol/v2-sdk'\nimport { NETWORKS } from '../constants'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [NETWORKS[ChainId.BSC_TESTNET]],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ConnectorNames } from '@diviner-protocol/uikit'\nimport { ChainId } from '@diviner-protocol/v2-sdk'\nimport { bscConnector, injected, walletconnect } from 'connectors'\nimport { ethers } from 'ethers'\n\n// const injected = new InjectedConnector({ supportedChainIds: [chainId] })\n// const injected = new InjectedConnector({ supportedChainIds: [56, 97, 137, 80001] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport default function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 15_000\n  return library\n}\n\nexport const getChainId = (): ChainId => {\n  return parseInt(window.localStorage.getItem('chainId')) as ChainId\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport type PopupContent =\n  | {\n      txn: {\n        hash: string\n        success: boolean\n        summary?: string\n      }\n    }\n  | {\n      listUpdate: {\n        listUrl: string\n        oldList: TokenList\n        newList: TokenList\n        auto: boolean\n      }\n    }\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('app/updateBlockNumber')\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal')\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu')\nexport const addPopup =\n  createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>('app/addPopup')\nexport const removePopup = createAction<{ key: string }>('app/removePopup')\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber,\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  popupList: PopupList\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(toggleWalletModal, (state) => {\n      state.walletModalOpen = !state.walletModalOpen\n    })\n    .addCase(toggleSettingsMenu, (state) => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    }),\n)\n","import BigNumber from 'bignumber.js/bignumber'\nimport { AddressMap, ChainId } from '@diviner-protocol/v2-sdk'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\nexport const DPT_PER_BLOCK = new BigNumber(10)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const BASE_URL = 'https://luckyswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://luckyswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 25\nexport const LOTTERY_MAX_TICKET_IN_ROUND = 300\nexport const BASE_API_ADMIN = 'https://dashboard.luckyswap.exchange'\nexport const BASE_API_ADMIN_PRO = 'https://dashboard-pro.luckyswap.exchange'\nexport const PREDICTION_API_URL = 'https://api-prediction.diviner.me'\nexport const DPT_PRICE = 0.015 // TODO: this one will call api\nexport const DPT_BNB_PRICE = 0.015 // TODO: this one will call api\nexport const CAKE_PRICE = 14 // TODO: this one will call api\nexport const CAKE_BNB_PRICE = 1\nexport const DPT_PER_YEAR = DPT_PER_BLOCK.times(BLOCKS_PER_YEAR)\n\nexport const DPT_ADDRESS: AddressMap = {\n  [ChainId.BSC]: '0xE69cAef10A488D7AF31Da46c89154d025546e990',\n  [ChainId.BSC_TESTNET]: '0x4d87EE06A797Ea69f39Bf47C0505a3866Ced1273',\n  [ChainId.MATIC]: '0x09FceE7287f882c5eEAb8032A64FDE54Fc1dD055',\n  [ChainId.MATIC_TESTNET]: '0xC2Ab68f3bE82a87DAFfE3386A13958A2B936260D',\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { addTransaction, clearTransaction, errorTransaction, finalizeTransaction } from './actions'\n\nexport enum TransactionStatus {\n  pending = 'pending',\n  success = 'success',\n  error = 'error',\n}\nexport interface TransactionDetails {\n  message: string\n  status: TransactionStatus\n}\n\nexport interface TransactionState {\n  [callData: string]: TransactionDetails\n}\n\nexport const initialState: TransactionState = {}\n\nexport const transactionsSlicer = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(addTransaction, (transactions, action) => {\n        if (transactions[action.payload.callData]) {\n          console.log('throw error ne')\n          throw Error('Attempted to add existing transaction.')\n        }\n        transactions[action.payload.callData] = {\n          status: TransactionStatus.pending,\n          message: '',\n        }\n      })\n      .addCase(clearTransaction, (transactions, { payload: { callData } }) => {\n        if (!transactions[callData]) return\n        transactions[callData] = null\n      })\n      .addCase(finalizeTransaction, (transactions, { payload: { callData, message } }) => {\n        if (!transactions[callData]) {\n          console.log('return luon ne')\n          return\n        }\n        transactions[callData].status = TransactionStatus.success\n        transactions[callData].message = message\n      })\n      .addCase(errorTransaction, (transactions, { payload: { callData, message } }) => {\n        if (!transactions[callData]) return\n        transactions[callData].status = TransactionStatus.error\n        transactions[callData].message = message\n      })\n  },\n})\n\nexport default transactionsSlicer.reducer\n","const tokens = {\n  bnb: {\n    symbol: \"BNB\",\n    projectLink: \"https://www.binance.com/\",\n  },\n\n  cake: {\n    symbol: \"CAKE\",\n    address: {\n      56: \"0xF61e1c34386ADD959937a99117C1fa3fE7DFf2F7\",\n      97: \"0xF61e1c34386ADD959937a99117C1fa3fE7DFf2F7\",\n    },\n    decimals: 18,\n    projectLink: \"https://pancakeswap.finance/\",\n  },\n  wbnb: {\n    symbol: \"wBNB\",\n    address: {\n      56: \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\",\n      97: \"0xae13d989dac2f0debff460ac112a837c89baa7cd\",\n    },\n    decimals: 18,\n    projectLink: \"https://pancakeswap.finance/\",\n  },\n\n  dptBnb: {\n    symbol: \"DPT-BNB\",\n    address: {\n      56: \"0x4d87EE06A797Ea69f39Bf47C0505a3866Ced1273\",\n      97: \"0x36d343abdcB3E184b088Efa871ed7Ad6D4543D08\",\n    },\n    decimals: 18,\n  },\n\n  dpt: {\n    symbol: \"DPT\",\n    address: {\n      56: \"0x4d87EE06A797Ea69f39Bf47C0505a3866Ced1273\",\n      97: \"0x5219BEd1C25202DA1B6fcAB9CA1d46C35d0ffD37\",\n    },\n    decimals: 18,\n  },\n  dgt: {\n    symbol: \"DGT\",\n    address: {\n      56: \"0x4d87EE06A797Ea69f39Bf47C0505a3866Ced1273\",\n      97: \"0x683968E4ee884563315746e7DECDF37C2A075147\",\n    },\n    decimals: 18,\n  },\n  busd: {\n    symbol: \"BUSD\",\n    address: {\n      56: \"0x4d87EE06A797Ea69f39Bf47C0505a3866Ced1273\",\n      97: \"0x35606cA16E901E32Fe52cbD172317141bDAB8afb\",\n    },\n    decimals: 18,\n  },\n\n  usdtBusdLp: {\n    symbol: \"Cake-LP\",\n    address: {\n      56: \"0x2C7Ab52226EDCA513C6FDa19263f2F444747BC84\",\n      97: \"0x2C7Ab52226EDCA513C6FDa19263f2F444747BC84\",\n    },\n    decimals: 18,\n  },\n};\n\nexport default tokens;\n","export default {\n  mulltiCall: {\n    56: \"0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B\",\n    97: \"0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576\",\n  },\n\n  staking: {\n    56: \"0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B\",\n    97: \"0xF3E76F0976389C51EFF53DBF20af9Df6b09686dd\",\n  },\n\n  prediction: {\n    56: [\n      \"0x562b441959Aa00b12d00a1725992C253FB705f05\",\n      \"0x44882ed1C425083424Ed49D26b8D504d6BE1C8Db\",\n      \"0x06456Cd5497E801c40c41856c824a67374a31EE7\",\n    ],\n    97: [\n      \"0x38A40C0473876CACE7B62edC0C0edeF826edc5b2\",\n      \"0x38A40C0473876CACE7B62edC0C0edeF826edc5b2\",\n      \"0x38A40C0473876CACE7B62edC0C0edeF826edc5b2\",\n    ],\n  },\n\n  game: {\n    56: \"0x0506871B68E5823693E115a5e2175b9A2c4CFB42\",\n    97: \"0xFe70F3F60894E36BcFD3dc1521aFaFb7A849E0F6\",\n  },\n  character: {\n    56: \"0xF46b29f3A8Cc3Bee845803C11a56251919A5f6c7\",\n    97: \"0x0FeE1300e857b1bA4476483C5e278aeC9387bb3B\",\n  },\n  equipment: {\n    56: \"0xAdD5a0B24E7F987e8FAB863e86BaB1F583c6DFB6\",\n    97: \"0x7EDD7F5aAe70E8F7795E5101F6f672A9Fb1e3cCB\",\n  },\n\n  priceOracle: {\n    56: \"0xFBFb4C4E10EBD70DcE28B8b00FdAD6c8e5De38dc\",\n    97: \"0x5aA7C4a25c9E3db2bCAe6E08dC2Bfe8aCed73730\",\n  },\n\n  gameWiki: {\n    56: \"0x7d88930d354BcB4cBB2F28eD4561b267baf147fA\",\n    97: \"0xDf4f2E52078135365f33eF5cB541A9e7c0aa1B35\",\n  },\n\n  faucet: {\n    56: \"0x23c41D28A239dDCAABd1bb1deF8d057189510066\",\n    97: \"0xe72A4D14d49568dEE390aCebFf18bD498eDd127D\",\n  },\n\n  market: {\n    56: \"\",\n    97: \"0x294Ea451bb3A63Db8A2CA1DEE0BCfFe98fe33E5E\",\n  },\n  tokenTransferProxy: {\n    56: \"123\",\n    97: \"0xa0c715AdB93C7D84961Abd6C3bDB66AEb276806E\",\n  },\n  nftsTransferProxy: {\n    56: \"\",\n    97: \"0x3544996b0Bce0FF5D6a99820148eE005208F9019\",\n  },\n\n  fakeCharacter: {\n    56: \"\",\n    97: \"0x26656936D36148320a0d83cE75958B0aFE0d9cD2\",\n  },\n\n  buyChest: {\n    56: \"0x2Af4A1d58E12de09306AAc5Bc108ce03459BE226\",\n    97: \"0xA7421E3f7A1885813B1C9749Cecae48745992A78\",\n  },\n};\n","import { ChainId } from \"@diviner-protocol/v2-sdk\";\nimport addresses from \"config/constants/contracts\";\nimport tokens from \"config/constants/tokens\";\nimport { Address } from \"config/constants/types\";\nimport { getChainId } from \"./web3React\";\n\n// TODO : Improve\nexport const getAddress = (address: Address, chainId?: ChainId): string => {\n  const tempChainId = getChainId();\n  // const mainNetChainId = 56\n  const envChainId = process.env.REACT_APP_CHAIN_ID;\n  return address[tempChainId] ?? address[envChainId];\n};\n\nexport const getCakeAddress = (chainId?: ChainId) => {\n  return getAddress(tokens.cake.address, chainId);\n};\nexport const getPredictionAddress = (chainId?: ChainId): string[] => {\n  const tempChainId = getChainId();\n  return addresses.prediction[chainId ?? tempChainId];\n};\n\nexport const getMulticallAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.mulltiCall, chainId);\n};\nexport const getWbnbAddress = (chainId?: ChainId) => {\n  return getAddress(tokens.wbnb.address, chainId);\n};\n\nexport const getMarketplaceAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.market, chainId);\n};\nexport const getTokenTransferProxyAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.tokenTransferProxy, chainId);\n};\nexport const getNFTsTransferProxyAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.nftsTransferProxy, chainId);\n};\n\nexport const getCharacterAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.character, chainId);\n};\nexport const getFakeCharacterAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.fakeCharacter, chainId);\n};\n\nexport const getDptAddress = (chainId?: ChainId) => {\n  return getAddress(tokens.dpt.address, chainId);\n};\n\nexport const getDgtAddress = (chainId?: ChainId) => {\n  return getAddress(tokens.dgt.address, chainId);\n};\nexport const getBusdAddress = (chainId?: ChainId) => {\n  return getAddress(tokens.busd.address, chainId);\n};\n\nexport const getChestMarketAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.buyChest, chainId);\n};\n\nexport const getGameAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.game, chainId);\n};\n\nexport const getEquipmentAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.equipment, chainId);\n};\n\nexport const getGameWikiAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.gameWiki, chainId);\n};\n\nexport const getOracleAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.priceOracle, chainId);\n};\n\nexport const getFaucetAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.faucet, chainId);\n};\n\nexport const getStakingAddress = (chainId?: ChainId) => {\n  return getAddress(addresses.staking, chainId);\n};\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, DPT_PER_YEAR } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\n/**\n * Get farm APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, bedexPriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = DPT_PER_YEAR.times(poolWeight)\n  const apy = yearlyCakeRewardAllocation.times(bedexPriceUsd).div(poolLiquidityUsd).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\nexport default null\n","import { ChainId } from \"@diviner-protocol/v2-sdk\";\nimport gameAbi from \"config/abi/game.json\";\nimport cakeAbi from \"config/abi/cake.json\";\nimport characterAbi from \"config/abi/character.json\";\nimport chestMarketAbi from \"config/abi/chestMarket.json\";\nimport marketplaceAbi from \"config/abi/DivinerMarketplace.json\";\nimport stakingAbi from \"config/abi/Staking.json\";\nimport bep20Abi from \"config/abi/erc20.json\";\nimport erc721Abi from \"config/abi/erc721.json\";\n\nimport fakeCharacterAbi from \"config/abi/FakeCharacter.json\";\nimport faucetAbi from \"config/abi/faucet.json\";\nimport gameWikiAbi from \"config/abi/gameWiki.json\";\nimport ifoAbi from \"config/abi/ifo.json\";\nimport lpTokenAbi from \"config/abi/lpToken.json\";\nimport multicall from \"config/abi/Multicall.json\";\nimport prediction from \"config/abi/prediction.json\";\nimport priceOracleAbi from \"config/abi/PriceOracle.json\";\nimport { ethers } from \"ethers\";\n// Addresses\nimport {\n  getCakeAddress,\n  getCharacterAddress,\n  getChestMarketAddress,\n  getFakeCharacterAddress,\n  getFaucetAddress,\n  getGameAddress,\n  getGameWikiAddress,\n  getMarketplaceAddress,\n  getMulticallAddress,\n  getOracleAddress,\n  getPredictionAddress,\n  getStakingAddress,\n} from \"utils/addressHelpers\";\nimport { simpleRpcProvider } from \"utils/providers\";\n\nconst getContract = (\n  abi: any,\n  address: string,\n  signer?: ethers.Signer | ethers.providers.Provider\n) => {\n  const signerOrProvider = signer ?? simpleRpcProvider;\n  return new ethers.Contract(address, abi, signerOrProvider);\n};\n\nexport const getBep20Contract = (\n  address: string,\n  signer?: ethers.Signer | ethers.providers.Provider\n) => {\n  return getContract(bep20Abi, address, signer);\n};\nexport const getErc721Contract = (\n  address: string,\n  signer?: ethers.Signer | ethers.providers.Provider\n) => {\n  return getContract(erc721Abi, address, signer);\n};\n\nexport const getLpContract = (\n  address: string,\n  signer?: ethers.Signer | ethers.providers.Provider\n) => {\n  return getContract(lpTokenAbi, address, signer);\n};\nexport const getIfoContract = (\n  address: string,\n  signer?: ethers.Signer | ethers.providers.Provider\n) => {\n  return getContract(ifoAbi, address, signer);\n};\n\nexport const getCakeContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(cakeAbi, getCakeAddress(chainId), signer);\n};\n\nexport const getMulticallContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(multicall, getMulticallAddress(), signer);\n};\n\nexport const getPredictionContracts = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getPredictionAddress().map((address) =>\n    getContract(prediction, address, signer)\n  );\n  // return getContract(prediction, getPredictionAddress(), signer)\n};\n\n// Marketplace\nexport const getMarketplaceContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  if (getMarketplaceAddress(chainId) === \"\") return null;\n  return getContract(marketplaceAbi, getMarketplaceAddress(chainId), signer);\n};\n\n// staking\nexport const getStakingContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(stakingAbi, getStakingAddress(chainId), signer);\n};\n\n// Charaters\nexport const getCharacterContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  if (getCharacterAddress(chainId) === \"\") return null;\n  return getContract(characterAbi, getCharacterAddress(chainId), signer);\n};\nexport const getFakeCharacterContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  if (getFakeCharacterAddress(chainId) === \"\") return null;\n  return getContract(\n    fakeCharacterAbi,\n    getFakeCharacterAddress(chainId),\n    signer\n  );\n};\n\n// Chest market\nexport const getChestMarketContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(chestMarketAbi, getChestMarketAddress(chainId), signer);\n};\n\n// faucet\nexport const getFaucetContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(faucetAbi, getFaucetAddress(chainId), signer);\n};\n\n// game\nexport const getGameContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(gameAbi, getGameAddress(chainId), signer);\n};\n\nexport const getGameWikiContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(gameWikiAbi, getGameWikiAddress(chainId), signer);\n};\n\nexport const getPriceOracleContract = (\n  signer?: ethers.Signer | ethers.providers.Provider,\n  chainId?: ChainId\n) => {\n  return getContract(priceOracleAbi, getOracleAddress(chainId), signer);\n};\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from './contractHelpers'\nimport { getChainId } from './web3React'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nexport type MultiCallResponse<T> = T | null\n\n// const multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n//   try {\n//     const chainId = getChainId()\n//     const multi = getMulticallContract(null, chainId)\n//     const itf = new ethers.utils.Interface(abi)\n\n//     const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n//     const { returnData } = await multi.aggregate(calldata)\n\n//     const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n//     return res\n//   } catch (error) {\n//     throw new Error('Error')\n//   }\n// }\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nconst multicall = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: false },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { DPT_BNB_PRICE, DPT_PRICE } from \"config\";\nimport erc20ABI from \"config/abi/erc20.json\";\nimport stakingAbi from \"config/abi/Staking.json\";\nimport { stakingConfig } from \"config/constants/staking\";\nimport tokens from \"config/constants/tokens\";\nimport { ethers } from \"ethers\";\nimport { getAddress, getStakingAddress } from \"utils/addressHelpers\";\nimport { getPoolApy } from \"utils/apy\";\nimport { getStakingContract } from \"utils/contractHelpers\";\nimport multicall from \"utils/multicall\";\nimport { UserPoolData } from \"../types\";\n\nexport const fetchGameUserTokenInfo = async (account: string) => {\n  const calls = [];\n  const dptToken = getAddress(tokens.dpt.address);\n  const lpToken = getAddress(tokens.dptBnb.address);\n\n  calls.push({ address: dptToken, name: \"balanceOf\", params: [account] });\n  calls.push({ address: lpToken, name: \"balanceOf\", params: [account] });\n  calls.push({\n    address: dptToken,\n    name: \"allowance\",\n    params: [account, getStakingAddress()],\n  });\n  calls.push({\n    address: lpToken,\n    name: \"allowance\",\n    params: [account, getStakingAddress()],\n  });\n\n  try {\n    const [dptBalance, lpBalance, dptAllowance, lpAllowance] = await multicall(\n      erc20ABI,\n      calls,\n      {\n        requireSuccess: false,\n      }\n    );\n\n    return {\n      dptBalance: dptBalance.toString(),\n      dptAllowance: dptAllowance.toString(),\n      lpBalance: lpBalance.toString(),\n      lpAllowance: lpAllowance.toString(),\n    };\n  } catch (error) {\n    console.log(\"error fetchGameUserTokenInfo\", error);\n    return {\n      dptBalance: \"0\",\n      dptAllowance: \"0\",\n      lpBalance: \"0\",\n      lpAllowance: \"0\",\n    };\n  }\n};\n\nexport const fetchUserPoolData = async (\n  account: string\n): Promise<UserPoolData[]> => {\n  const calls = [];\n  for (let i = 0; i <= 5; i++) {\n    calls.push({\n      address: getStakingAddress(),\n      name: \"users\",\n      params: [i, account],\n    });\n  }\n\n  try {\n    const results = await multicall(stakingAbi, calls, {\n      requireSuccess: false,\n    });\n\n    return results.map((result) => {\n      return {\n        amountStaked: result.amount.toString(),\n        firstTimeDeposit: result.firstTimeDeposit.toNumber(),\n      };\n    });\n  } catch (error) {\n    console.log(\"error fetchUserPoolData\", error);\n    return [];\n  }\n};\n\nexport const fetchPoolDataWithPoolId = async (\n  account: string,\n  poolId: number\n) => {\n  try {\n    const stakingContract = getStakingContract();\n    const getUserPoolInfoPromise = stakingContract.users(poolId, account);\n    const getPoolInfoPromise = stakingContract.pools(poolId);\n    const pendingRewardPromise = stakingContract.pendingReward(poolId, account);\n\n    const [userPoolInfo, poolInfo, pendingReward] = await Promise.all([\n      getUserPoolInfoPromise,\n      getPoolInfoPromise,\n      pendingRewardPromise,\n    ]);\n\n    const apy = getPoolApy(\n      DPT_PRICE,\n      poolId < 3 ? DPT_PRICE : DPT_BNB_PRICE,\n      parseFloat(ethers.utils.formatEther(poolInfo.totalAmount.toString())),\n      parseFloat(ethers.utils.formatEther(poolInfo.rewardPerBlock.toString()))\n    );\n\n    return {\n      poolId,\n      userPoolInfo: {\n        amountStaked: userPoolInfo.amount.toString(),\n        firstTimeDeposit: userPoolInfo.firstTimeDeposit.toNumber(),\n        pendingReward: pendingReward.toString(),\n      },\n      totalAmount: poolInfo.totalAmount.toString(),\n      apy,\n    };\n  } catch (error) {\n    console.log(\"error fetchPoolDataWithPoolId\", error);\n    return [];\n  }\n};\n\nexport const fetchPendingReward = async (account: string) => {\n  try {\n    const calls = [];\n    for (let i = 0; i <= 5; i++) {\n      calls.push({\n        address: getStakingAddress(),\n        name: \"pendingReward\",\n        params: [i, account],\n      });\n    }\n\n    const results = await multicall(stakingAbi, calls, {\n      requireSuccess: false,\n    });\n    return results.map((result) => result.toString());\n  } catch (error) {\n    console.log(\"error fetchPendingReward\", error);\n  }\n};\n\nexport const fetchPendingRewardWithPoolId = async (\n  account: string,\n  poolId: string\n) => {\n  try {\n    const stakingContract = getStakingContract();\n    return (await stakingContract.pendingInterest(poolId, account)).toString();\n  } catch (error) {\n    console.log(\"error fetchPendingRewardWithPoolId\", error);\n  }\n};\n","import { StakingConfig } from \"./types\";\n\nexport const stakingConfig: StakingConfig[] = [\n  { title: \"DPT\", poolId: 0 },\n  { title: \"DPT\", poolId: 1 }, // 1 month\n  { title: \"DPT\", poolId: 2 }, // 3 months\n  { title: \"DPT-BNB\", poolId: 3 }, // 6 months\n  { title: \"DPT-BNB\", poolId: 4 },\n  { title: \"DPT-BNB\", poolId: 5 },\n];\n","import stakingAbi from \"config/abi/Staking.json\";\nimport { getStakingAddress } from \"utils/addressHelpers\";\nimport multicall from \"utils/multicall\";\nimport { stakingConfig } from \"config/constants/staking\";\nimport { getPoolApy } from \"utils/apy\";\nimport { ethers } from \"ethers\";\nimport { DPT_BNB_PRICE, DPT_PRICE } from \"config\";\n\nconst fetchPools = async () => {\n  try {\n    const calls = [];\n    for (let i = 0; i <= 5; i++)\n      calls.push({ address: getStakingAddress(), name: \"pools\", params: [i] });\n\n    const results = await multicall(stakingAbi, calls, {\n      requireSuccess: false,\n    });\n    return [\n      ...results.map((pool, index) => {\n        const apy = getPoolApy(\n          DPT_PRICE,\n          index < 3 ? DPT_PRICE : DPT_BNB_PRICE,\n          parseFloat(ethers.utils.formatEther(pool.totalAmount.toString())),\n          parseFloat(ethers.utils.formatEther(pool.rewardPerBlock.toString()))\n        );\n\n        return {\n          totalAmount: pool.totalAmount.toString(),\n          lockingTime: pool.lockingTime.toNumber(),\n          endBlock: pool.endBlock.toNumber(),\n          apy: apy?.toString(),\n          ...stakingConfig[index],\n        };\n      }),\n    ];\n  } catch (error) {\n    console.log(\"error fetchPools\", error);\n    return [\n      {\n        totalAmount: \"0\",\n        endBlock: 0,\n        timeLocking: \"0\",\n      },\n    ];\n  }\n};\n\nexport default fetchPools;\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport BigNumber from \"bignumber.js\";\nimport _ from \"lodash\";\nimport { StakingState } from \"../types\";\nimport {\n  fetchUserPoolData,\n  fetchGameUserTokenInfo,\n  fetchPoolDataWithPoolId,\n  fetchPendingReward,\n  fetchPendingRewardWithPoolId,\n} from \"./fetchGameUserData\";\n\nimport fetchPools from \"./fetchPools\";\n\nconst initialState: StakingState = {\n  userData: {\n    userTokenData: {\n      dptBalance: \"0\",\n      lpBalance: \"0\",\n      dptAllowance: \"0\",\n      lpAllowance: \"0\",\n    },\n    userPoolData: [],\n  },\n  poolInfo: [],\n  isLoading: true,\n};\n\nexport const gameSlice = createSlice({\n  name: \"staking\",\n  initialState,\n  reducers: {\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setPendingRewardToZero: (state, action) => {\n      state.userData.userPoolData[action.payload].pendingReward = \"0\";\n    },\n    resetUserData: (state) => {\n      state.userData = {\n        userTokenData: {\n          dptBalance: \"0\",\n          lpBalance: \"0\",\n          dptAllowance: \"0\",\n          lpAllowance: \"0\",\n        },\n        userPoolData: [],\n      };\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(fetchGameUserData.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchGameUserData.fulfilled, (state, action) => {\n      state.userData.userTokenData = action.payload.userTokenData;\n      state.userData.userPoolData = action.payload.userPoolData.map(\n        (data, index) => {\n          return {\n            ...data,\n            pendingReward: action.payload.pendingRewards[index],\n          };\n        }\n      );\n      state.isLoading = false;\n    });\n    builder.addCase(fetchUserTokenData.fulfilled, (state, action) => {\n      state.userData.userTokenData = action.payload;\n    });\n\n    builder.addCase(fetchPoolsData.fulfilled, (state, action) => {\n      state.poolInfo = action.payload;\n    });\n    builder.addCase(fetchPoolWithId.fulfilled, (state, action) => {\n      state.userData.userPoolData[action.payload.poolId] = {\n        ...state.userData.userPoolData[action.payload.poolId],\n        ...action.payload.userPoolInfo,\n      };\n\n      state.poolInfo[action.payload.poolId].totalAmount =\n        action.payload.totalAmount;\n      state.poolInfo[action.payload.poolId].apy = action.payload.apy;\n    });\n    builder.addCase(fetchPendingRewardAllPool.fulfilled, (state, action) => {\n      action.payload.forEach((data, index) => {\n        state.userData.userPoolData[index].pendingReward = data;\n      });\n    });\n    // builder.addCase(fetchPendingReward1Pool.fulfilled, (state, action) => {\n    //   state.userData.userPoolData[parseInt(action.payload.poolId) - 1].pendingReward = '0'\n    // })\n  },\n});\n\n// thunk\n\nexport const fetchGameUserData = createAsyncThunk<any, string>(\n  \"staking/fetchGameUserData\",\n  async (account) => {\n    const fetchGameUserTokenInfoPromise = fetchGameUserTokenInfo(account);\n    const fetchGameUserInfoPromise = fetchUserPoolData(account);\n    const fetchPendingRewardPromise = fetchPendingReward(account);\n    const [userTokenData, userPoolData, pendingRewards] = await Promise.all([\n      fetchGameUserTokenInfoPromise,\n      fetchGameUserInfoPromise,\n      fetchPendingRewardPromise,\n    ]);\n\n    return { userTokenData, userPoolData, pendingRewards };\n  }\n);\n\nexport const fetchUserTokenData = createAsyncThunk(\n  \"staking/fetchUserTokenData\",\n  async (account: string) => {\n    const userTokenData = await fetchGameUserTokenInfo(account);\n    return userTokenData;\n  }\n);\n\nexport const fetchPoolsData = createAsyncThunk(\n  \"staking/fetchPools\",\n  async () => {\n    const pools = await fetchPools();\n    return pools;\n  }\n);\n\nexport const fetchPoolWithId = createAsyncThunk<any, any>(\n  \"staking/fetchPoolWithId\",\n  async ({ account, poolId }) => {\n    const data = await fetchPoolDataWithPoolId(account, poolId);\n    return data;\n  }\n);\n\nexport const fetchPendingRewardAllPool = createAsyncThunk(\n  \"staking/fetchPendingRewardAllPool\",\n  async (account: string) => {\n    const pendingRewards = await fetchPendingReward(account);\n    return pendingRewards;\n  }\n);\n\nexport const fetchPendingReward1Pool = createAsyncThunk<any, any>(\n  \"staking/fetchPendingRewardAllPool\",\n  async ({ account, poolId }) => {\n    const pendingReward = await fetchPendingRewardWithPoolId(account, poolId);\n    return { pendingReward, poolId };\n  }\n);\n\n// actions\nexport const { setIsLoading, setPendingRewardToZero, resetUserData } =\n  gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const addTransaction = createAction<any>('transactions/addTransaction')\n\nexport const clearTransaction = createAction<any>('transactions/clearTransaction')\n\nexport const finalizeTransaction = createAction<any>('transactions/finalizeTransaction')\n\nexport const errorTransaction = createAction<any>('transactions/errorTransaction')\n","export const DEFAULT_TOKEN_LIST_URL = 'pancakeswap'\n\nexport const DEFAULT_LIST_OF_LISTS: string[] = [DEFAULT_TOKEN_LIST_URL]\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default createAction\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\nexport const selectList = createAction<string>('lists/selectList')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\nimport DEFAULT_LIST from '../../constants/token/luckyswap.json'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n  readonly selectedListUrl: string | undefined\n}\n\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n    [DEFAULT_TOKEN_LIST_URL]: {\n      error: null,\n      current: DEFAULT_LIST,\n      loadingRequestId: null,\n      pendingUpdate: null,\n    },\n  },\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(selectList, (state, { payload: url }) => {\n      state.selectedListUrl = url\n      // automatically adds list\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      if (state.selectedListUrl === url) {\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.selectedListUrl = undefined\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n    }),\n)\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { load } from \"redux-localstorage-simple\";\nimport application from \"./application/reducer\";\nimport staking from \"./staking\";\n\nimport transactions from \"./transactions/reducer\";\nimport lists from \"./lists/reducer\";\n\ntype MergedState = {\n  user: {\n    [key: string]: any;\n  };\n  transactions: {\n    [key: string]: any;\n  };\n};\nconst PERSISTED_KEYS: string[] = [\"user\", \"transactions\"];\nconst loadedState = load({ states: PERSISTED_KEYS }) as MergedState;\nif (loadedState.user) {\n  // loadedState.user.userDarkMode = getThemeCache()\n}\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== \"production\",\n  reducer: {\n    transactions,\n    application,\n    lists,\n    staking,\n  },\n  // middleware: [...(getDefaultMiddleware({ thunk: false }) as any), save({ states: PERSISTED_KEYS })],\n  // preloadedState: loadedState,\n});\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport type AppState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport { connectorLocalStorageKey, ConnectorNames } from '@diviner-protocol/uikit'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { useCallback } from 'react'\nimport { setupNetwork } from 'utils/wallet'\nimport { connectorsByName } from 'utils/web3React'\nimport { useAppDispatch } from '../state'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            alert('error')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n          } else {\n            alert('error')\n          }\n        }\n      })\n    } else {\n      alert('error')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const logout = useCallback(() => {\n    deactivate()\n    window.localStorage.removeItem('connectorId')\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { useEffect, useState } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@diviner-protocol/uikit'\n\nimport useAuth from 'hooks/useAuth'\nimport { useWeb3React } from '@web3-react/core'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n  const { active } = useWeb3React() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState<boolean>(false)\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n    if (connectorId) {\n      try {\n        const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n        const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n        // Currently BSC extension doesn't always inject in time.\n        // We must check to see if it exists, and if not, wait for it before proceeding.\n        // if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        if (isConnectorBinanceChain && !isBinanceChainDefined) {\n          _binanceChainListener().then(() => {\n            login(connectorId)\n          })\n        } else {\n          login(connectorId)\n        }\n      } catch (error) {\n        setTried(true)\n      }\n    } else {\n      setTried(true)\n    }\n  }, [login])\n\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\nexport default useEagerConnect\n","import { useWeb3React } from '@web3-react/core'\nimport { network } from 'connectors'\nimport { useInactiveListener } from 'hooks'\nimport { useEffect } from 'react'\nimport { NetworkContextName } from '../constants'\nimport useEagerConnect from './useEagerConnect'\n\nconst useWeb3ReactManager = () => {\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager)\n}\n\nexport default useWeb3ReactManager\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Social() {\n  return (\n    <SocialStyled>\n      <a href=\"https://app.diviner.finance/#/\" target=\"_blank\" rel=\"noreferrer\">\n        <img src=\"./images/homepage/icon-network.svg\" alt=\"\"/>\n      </a>\n\n      <a href=\"https://medium.com/@Diviner_Protocol\" target=\"_blank\" rel=\"noreferrer\">\n        <img src=\"./images/homepage/icon-medium.svg\" alt=\"\"/>\n      </a>\n\n      <a href=\"https://twitter.com/DivinerProtocol\" target=\"_blank\" rel=\"noreferrer\">\n        <img src=\"./images/homepage/icon-twitter.svg\" alt=\"\"/>\n      </a>\n\n      <a href=\"https://t.me/DivinerProtocolOfficial\" target=\"_blank\" rel=\"noreferrer\">\n        <img src=\"./images/homepage/icon-tele.svg\" alt=\"\"/>\n      </a>\n\n      {/* <a href=\"/\" target=\"_blank\">\n        <img src=\"./images/homepage/icon-discord.svg\" alt=\"\"/>\n      </a>*/}\n\n      <a href=\"https://www.youtube.com/channel/UCOmZZoKvY1bDhcE49BiqcDA\" target=\"_blank\" rel=\"noreferrer\">\n        <img src=\"./images/homepage/icon-youtube.svg\" alt=\"\"/>\n      </a> \n    </SocialStyled>\n  );\n}\n\nconst SocialStyled = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 17px;\n  margin-bottom: 78px;\n\n  a {\n    img {\n      transition: 0.5s ease-in-out;\n      cursor: pointer;\n    }\n\n    &:hover {\n      img {\n        transform: scale(1.2);\n        transition: 0.5s ease-in-out;\n      }\n    }\n  }\n`;\n\nexport default Social;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Social from '../../../components/Social'\n\n\nfunction ItemProject() {\n  return (\n    <ItemProjectStyled>\n      <Item>\n        <figure><img src=\"./images/homepage/banner-item.png\" alt=\"\"/></figure>\n        \n        <div className=\"content\">\n          <Social/>\n\n          <div className=\"content__number\">\n            <div className=\"content__number-item\">\n              <span>Token price</span>\n              <h3>12 BUSD</h3>\n            </div>\n\n            <div className=\"content__number-item\">\n              <span>Total Tribe</span>\n              <h3>500 Tribe</h3>\n            </div>\n\n            <div className=\"content__number-item\">\n              <span>Hard Cap</span>\n              <h3>500,000 BUSD</h3>\n            </div>\n\n            <div className=\"content__number-item\">\n              <span>Type Vesting</span>\n              <h3>25% BUSD</h3>\n            </div>\n          </div>\n        </div>\n      </Item>\n    </ItemProjectStyled>\n  )\n}\n\nconst ItemProjectStyled = styled.div`\n\n`\n\nconst Item = styled.div`\n  background: #22376F;\n  border-radius: 25px;\n  overflow: hidden;\n\n  figure {\n    border-top-left-radius: 25px;\n    border-top-right-radius: 25px;\n\n    img {\n      width: 100%;\n      transform: scale(1);\n      transition: .5s ease-in-out;\n      cursor: pointer;\n\n      &:hover {\n        transform: scale(1.1);\n        transition: .5s ease-in-out;\n      }\n    }\n  }\n\n  .content {\n    > div {\n      &:first-of-type {\n        margin: 27px 0; \n        padding-left:  32px;\n      }\n    }\n\n    &__number {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 20px;\n      padding: 0 32px 32px;\n    }\n\n    &__number-item {\n      &:nth-child(2n) {\n        text-align: right;\n      }\n\n      span {\n        color: #7ED6FF;\n        font-size: 1.25rem;\n      }\n\n      h3 {\n        color: #ffffff;\n        font-size: 1.63rem;\n      }\n    }\n  }\n`\nexport default ItemProject\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Steps } from \"antd\";\n\nconst { Step } = Steps;\n\nfunction IdoProcess() {\n  return (\n    <BoxProcess>\n      <h2>IDO Process</h2>\n\n      <div className=\"process__item desktop\">\n        <Steps current={1} percent={70}>\n          <Step title=\"Prepare\" description=\"20/10\" />\n          <Step title=\"Staking to whitelist\" description=\"23/10\" />\n          <Step title=\"Sale\" description=\"24/10\" />\n          <Step title=\"Distribute\" description=\"5/11\" />\n        </Steps>\n      </div>\n\n      <div className=\"process__item mobile\">\n        <Steps direction=\"vertical\" current={3}>\n          <Step title=\"Prepare\" description=\"20/10\" />\n          <Step title=\"Staking to whitelist\" description=\"23/10\" />\n          <Step title=\"Sale\" description=\"24/10\" />\n          <Step title=\"Distribute\" description=\"5/11\" />\n        </Steps>\n      </div>\n    </BoxProcess>\n  );\n}\n\nconst BoxProcess = styled.div`\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\n    #2b458b;\n  border-radius: 25px;\n  margin-bottom: 24px;\n\n  h2 {\n    color: #ffffff;\n    background: #35beff;\n    padding: 20px 30px;\n    font-size: 1.8rem;\n    font-weight: 600;\n    border-top-left-radius: 25px;\n    border-top-right-radius: 25px;\n  }\n\n  .process__item {\n    padding: 35px 32px;\n\n    &.desktop {\n      display: none;\n\n      @media (min-width: 767px) {\n        display: block;\n      }\n    }\n\n    &.mobile {\n      display: block;\n\n      @media (min-width: 767px) {\n        display: none;\n      }\n    }\n\n    .ant-steps {\n      &-item {\n        width: auto;\n        overflow: visible !important;\n        position: relative;\n\n        @media (min-width: 767px) {\n          width: 200px;\n        }\n\n        &:after {\n          content: \"\";\n          width: 100%;\n          border: 1px dashed rgba(255, 255, 255, 0.24);\n          position: absolute;\n          top: 50%;\n          left: 0;\n          transform: translateY(-50%);\n\n          @media (max-width: 767px) {\n            display: none;\n          }\n        }\n      }\n\n      &-item-container {\n        position: relative;\n        display: flex;\n        justify-content: unset;\n        z-index: 2;\n\n        @media (min-width: 767px) {\n          justify-content: center;\n        }\n      }\n\n      &-item-title,\n      &-item-description {\n        color: #ffffff !important;\n      }\n\n      &-item-title {\n        position: unset;\n        bottom: unset;\n        left: unset;\n        transform: unset;\n        font-size: 1.25rem;\n        font-weight: 600;\n\n        @media (min-width: 767px) {\n          position: absolute;\n          bottom: -33px;\n          left: 50%;\n          transform: translateX(-50%);\n          font-size: 1.25rem;\n          font-weight: 600;\n        }\n\n        &:after {\n          display: none;\n        }\n      }\n\n      &-item-description {\n        position: unset;\n        top: unset;\n        left: unset;\n        transform: unset;\n        font-size: 1rem;\n        font-weight: 600;\n\n        @media (min-width: 767px) {\n          position: absolute;\n          top: -26px;\n          left: 50%;\n          transform: translateX(-50%);\n          font-size: 1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n`;\nexport default IdoProcess;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Input } from \"antd\";\n\nfunction Purchase() {\n  return (\n    <PurchaseStyled>\n      <h2>Purchase</h2>\n\n      <div className=\"purchase__content\">\n        <h3>IDO not active</h3>\n\n        <Button type=\"primary\">Staking to whitelist</Button>\n      </div>\n\n      <div className=\"purchase__content\">\n        <div className=\"purchase__content-wrap\">\n          <div className=\"purchase__content-wrap-item\">\n            <span>Max Purchase:</span>\n            <p>500 Tribes - 200 BUSD</p>\n          </div>\n        </div>\n\n        <Button type=\"primary\">Staking to whitelist</Button>\n\n        <div className=\"purchase__content-sale\">\n          <div className=\"purchase__content-sale__dflex\">\n            <span className=\"title\">Buy</span>\n            <Input defaultValue=\"5000\" suffix=\"BUSD\" />\n          </div>\n\n          <div className=\"purchase__content-sale__dflex\">\n            <span className=\"title\">Get</span>\n            <Input defaultValue=\"2000\" suffix=\"Tribes\" />\n          </div>\n\n          <div className=\"purchase__content-sale__button\">\n            <Button>Confirm</Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"purchase__content\">\n        <div className=\"purchase__content-wrap\">\n          <div className=\"purchase__content-wrap-item\">\n            <span>Bough:</span>\n            <p>500 Tribes - 200 BUSD</p>\n          </div>\n\n          <div className=\"purchase__content-wrap-item\">\n            <span>Next Vesting Date:</span>\n            <p>500 Tribes - 200 BUSD</p>\n          </div>\n\n          <div className=\"purchase__content-wrap-item\">\n            <span>Available Tribe:</span>\n            <p>500 Tribes - 200 BUSD</p>\n          </div>\n        </div>\n\n        <Button type=\"primary\">Claim</Button>\n      </div>\n    </PurchaseStyled>\n  );\n}\n\nconst PurchaseStyled = styled.div`\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\n    #2b458b;\n  border-radius: 25px;\n\n  h2 {\n    color: #ffffff;\n    background: #35beff;\n    padding: 2px 30px;\n    font-size: 1.8rem;\n    font-weight: 600;\n    border-top-left-radius: 25px;\n    border-top-right-radius: 25px;\n  }\n\n  .purchase__content {\n    padding: 27px 30px;\n    text-align: center;\n\n    h3 {\n      color: rgba(255, 255, 255, 0.5);\n      margin-bottom: 30px;\n      font-size: 2rem;\n      font-weight: 600;\n    }\n\n    button {\n      background: #55b3f8;\n      border-radius: 50px;\n      width: 100%;\n      max-width: 248px;\n      line-height: unset;\n      padding: 17px 0;\n      font-size: 1.25rem;\n      font-weight: 500;\n      height: auto !important;\n    }\n\n    &-wrap {\n      display: flex;\n      flex-direction: column;\n    }\n\n    &-wrap-item {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: space-between;\n\n      span {\n        color: #72c2ed;\n        font-size: 1.13rem;\n        font-weight: 400;\n        margin-bottom: 15px;\n      }\n\n      p {\n        color: #ffffff;\n        font-size: 1.25rem;\n        font-weight: 600;\n      }\n    }\n\n    &-sale {\n      display: grid;\n      grid-template-columns: 1fr;\n      gap: 30px;\n      margin-top: 26px;\n\n      @media (min-width: 767px) {\n        gap: 100px;\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n\n    &-sale__dflex {\n      display: flex;\n      justify-content: space-between;\n      justify-content: center;\n      align-items: center;\n\n      .ant-input-affix-wrapper {\n        border-radius: 22px;\n      }\n\n      span {\n        &.title {\n          color: #72c2ed;\n          font-weight: 300;\n          font-size: 1.25rem;\n          display: block;\n          margin-right: 10px;\n        }\n\n        input,\n        .ant-input-suffix {\n          font-weight: 500;\n          font-size: 1rem;\n        }\n\n        input {\n          color: #7d7f81;\n          height: 33px;\n        }\n\n        .ant-input-suffix {\n          color: #1796ff;\n        }\n      }\n    }\n\n    &-sale__button {\n      button {\n        border: 1px solid #ffffff;\n        color: #ffffff;\n        padding: 5px 0;\n        max-width: 140px;\n        background: linear-gradient(\n            0deg,\n            rgba(0, 0, 0, 0.2),\n            rgba(0, 0, 0, 0.2)\n          ),\n          #2b458b;\n      }\n    }\n  }\n`;\nexport default Purchase;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\nimport { Tabs, Table } from 'antd'\n\n\nconst { TabPane } = Tabs\n\nfunction callback(key) {\n  console.log(key)\n}\n\n\n\nfunction ListProject() {\n  return (\n    <BoxTabs>\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n        <TabPane tab=\"Project Details\" key=\"1\">\n          <WrapStyled>\n            <LeftContent>\n              <div className=\"ant-table\">\n                <table >\n                  <tbody className=\"ant-table-tbody\">\n                    <tr>\n                      <td className=\"ant-table-cell\">Opens</td>\n                      <td className=\"ant-table-cell\">12-10 09:00 UTC</td>\n                    </tr>\n\n                    <tr>\n                      <td className=\"ant-table-cell\">FCFS Opens</td>\n                      <td className=\"ant-table-cell\">12-10 09:00 UTC</td>\n                    </tr>\n\n                    <tr>\n                      <td className=\"ant-table-cell\">Closes</td>\n                      <td className=\"ant-table-cell\">12-10 09:00 UTC</td>\n                    </tr>\n\n                    <tr>\n                      <td className=\"ant-table-cell\">Swap Rate</td>\n                      <td className=\"ant-table-cell\">1 BUSD = 1000.0000 METAV</td>\n                    </tr>\n\n                    <tr>\n                      <td className=\"ant-table-cell\">Cap</td>\n                      <td className=\"ant-table-cell\">120000 BUSD</td>\n                    </tr>\n                    <tr>\n                      <td className=\"ant-table-cell\">Total Users Participated</td>\n                      <td className=\"ant-table-cell\">128435.434344 BUSD</td>\n                    </tr>\n\n                    <tr>\n                      <td className=\"ant-table-cell\">Access Type</td>\n                      <td className=\"ant-table-cell\">Private</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </LeftContent>\n\n            <RightContent>\n              <div className=\"ant-table\">\n                <table >\n                  <tbody className=\"ant-table-tbody\">\n                    <tr>\n                      <td className=\"ant-table-cell\">Name</td>\n                      <td className=\"ant-table-cell\">MetaVPad</td>\n                    </tr>\n\n                    <tr>\n                      <td className=\"ant-table-cell\">Token Symbol</td>\n                      <td className=\"ant-table-cell\">METAV</td>\n                    </tr>\n                    <tr>\n                      <td className=\"ant-table-cell\">IDO Supply:</td>\n                      <td className=\"ant-table-cell\">625000 METAV</td>\n                    </tr>\n                    <tr>\n                      <td className=\"ant-table-cell\">Total Supply:</td>\n                      <td className=\"ant-table-cell\">200000000 METAV</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </RightContent>\n          </WrapStyled>\n        </TabPane>\n\n        <TabPane tab=\"Your Allocation\" key=\"2\">\n\n        </TabPane>\n      </Tabs>\n    </BoxTabs>\n  )\n}\n\nconst BoxTabs = styled.div`\n  margin-bottom: 30px;\n\n  .ant-tabs {\n    overflow: visible;\n  }\n\n  .ant-tabs-tab {\n    font-size: 1.6rem;\n    font-weight: 500;\n    color: #ffffff;\n\n    &.ant-tabs-tab-active {\n      font-weight: 600;\n    }\n  }\n\n  .ant-pagination  {\n    display: none !important;\n  }\n\n  .ant-table {\n    background: transparent !important;\n\n    tr {\n      &:nth-child(even) {\n        td {\n          background: rgba(196, 196, 196, 0.12);\n        }\n      }\n      td {\n        border: 1px solid rgba(255, 255, 255, 0.5);\n        font-size: 1.2rem;\n        color: #ffffff;\n      }\n    }\n  }\n`\n\nconst WrapStyled = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 20px;\n\n  @media (min-width: 767px) {\n    grid-template-columns: repeat( auto-fit, minmax(480px, 1fr) );\n  }\n`\n\nconst LeftContent = styled.div`\n\n`\n\nconst RightContent = styled.div`\n\n`\nexport default ListProject\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nfunction PdfSroll() {\n  return (\n    <PdfSrollStyled>\n \n    </PdfSrollStyled>\n  )\n}\n\nconst PdfSrollStyled = styled.div`\n  display: grid;\n  grid-template-columns: 500px 1fr;\n  gap: 30px;\n  padding-top: 66px;\n`\n\nexport default PdfSroll\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport ItemProject from './Components/ItemProjects'\nimport IdoProcess from './Components/IdoProcess'\nimport Purchase from './Components/Purchase'\nimport ListProject from './Components/ListProject'\nimport PdfScroll from './Components/PdfScroll'\n\nfunction Project() {\n  return (\n    <ProjectStyled>\n      <TwoColumn>\n        <LeftContent>\n          <ItemProject/>\n        </LeftContent>\n        \n        <RightContent>\n          <IdoProcess/>\n          <Purchase/>\n        </RightContent>\n      </TwoColumn>\n\n      <ListProject/>\n\n      <PdfScroll/>\n    </ProjectStyled>\n  )\n}\n\nconst ProjectStyled = styled.div`\n  margin-top: 140px;\n`\n\nconst TwoColumn = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 30px;\n\n  @media (min-width: 767px) {\n    grid-template-columns: 500px 1fr;\n  }\n`\n\nconst LeftContent = styled.div`\n\n`\n\nconst RightContent = styled.div`\n\n`\nexport default Project\n","import React from 'react'\nimport styled from 'styled-components'\nimport Social from '../../../components/Social'\n\nfunction Banner() {\n  return (\n    <BannerStyled>\n      <ContentStyled>\n        <LeftContent>\n          <h1>DIVINER PROTOCOL FUNDRAISING PLATFORM</h1>\n          <p>The Launchpad on Diviner Protocol is dedicated to facilitate the development of gamefi and mateverse landscape. Startups can submit project information to apply for IGO (Initial Game Offering).</p>\n\n          <Social/>\n        </LeftContent>\n\n        <RightContent>\n          <div className=\"content\">\n            <div className=\"item\">\n              <span>TVL</span>\n              <h3>&#36;5000</h3>\n            </div>\n\n            <div className=\"item\">\n              <span>Average APY</span>\n              <h3>50&#37;</h3>\n            </div>\n\n            <div className=\"item\">\n              <span>Total DPT Stake</span>\n              <h3>200</h3>\n            </div>\n\n            <div className=\"item\">\n              <span>Unique Staker</span>\n              <h3>200&#37;</h3>\n            </div>\n          </div>\n        </RightContent>\n\n        <CharactorStyled>\n          <img src=\"./images/homepage/charactor-dpt.png\" alt=\"\" />\n        </CharactorStyled>\n\n        <CoinStyled>\n          <img src=\"./images/homepage/icon-coin2.png\" alt=\"\" />\n        </CoinStyled>\n      </ContentStyled>\n    </BannerStyled>\n  )\n}\n\nconst BannerStyled = styled.div`\n  padding-top: 16rem;\n  background: linear-gradient(113.97deg, #351DC9 18.71%, #315EFF 56.5%, #49C8FF 92%);\n  background-size: cover;\n  background-position: 100%;\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  margin-left: -50vw;\n  margin-right: -50vw;\n  left: 50%;\n  right: 50%;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n\n  @media (max-width: 767px) {\n    padding-top: 0;\n    height: 100%;\n    overflow: visible;\n  }\n`\n\nconst CharactorStyled = styled.div`\n  position: relative;\n\n  img {\n    width: 100%;\n\n    @media (max-width: 767px) {\n      position: absolute;\n      bottom: -48px;\n      z-index: 99;\n      max-width: 280px;\n    }\n  }\n`\n\nconst CoinStyled = styled.div`\n  position: relative;\n\n  img {\n    position: absolute;\n    bottom: 0;\n    right: 100px;\n\n    @media (max-width: 767px) {\n      display: none;\n    }\n  }\n`\n\nconst ContentStyled = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1400px;\n  padding-left: 16px;\n  padding-right: 16px;\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 50px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n    grid-template-columns: 1fr 605px;\n  }\n\n  @media (max-width: 1920px) {\n    transform: scale(0.9);\n    margin-bottom: 50px;\n  }\n`\n\nconst LeftContent = styled.div`\n  h1 {\n    padding-top: 130px;\n    font-size: 2rem;\n    line-height: 40px;\n    font-weight: 600;\n    color: #ffffff;\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n    @media (min-width: 767px) {\n      font-size: 3.13rem;\n      line-height: 60px;\n      padding-top: unset;\n    }\n  }\n\n  p {\n    font-size: 1rem;\n    color: #A6D4FF;\n    font-weight: 400;\n    margin-bottom: 22px;\n\n    @media (min-width: 767px) {\n      font-size: 1.3rem;\n    }\n  }\n\n  .box__social {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n`\n\nconst RightContent = styled.div`\n  position: relative;\n\n  &:before {\n    content: \"\";\n    background: url('../images/homepage/icon-coin.png') no-repeat;\n    background-size: contain;\n    background-position: center;\n    position: absolute;\n    top: -68px;\n    left: 38px;\n    width: 100%;\n    height: 103px;\n    z-index: 5;\n\n    @media (min-width: 767px) {\n      top: -134px;\n      left: 85px;\n      width: 360px;\n      height: 175px;\n    }\n  }\n\n  &:after {\n    content: \"\";\n    background: url('../images/homepage/icon-coin1.png') no-repeat;\n    background-size: contain;\n    background-position: center;\n    position: absolute;\n    top: 100px;\n    right: -147px;\n    width: 247px;\n    height: 214px;\n    z-index: 1;\n  }\n\n  .content {\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    gap: 30px;\n    background: linear-gradient(147.04deg,#F8AF41 17.64%,#F16C42 80.33%);\n    border: 1px solid rgba(255,255,255,0.49);\n    box-sizing: border-box;\n    border-radius: 24px;\n    padding: 30px 28px;\n    z-index: 4;\n\n    @media (min-width: 767px) {\n      padding: 50px 28px;\n    }\n  }\n\n  span {\n    color: #ffffff;\n    font-size: 1.2rem;\n\n    @media (min-width: 767px) {\n      font-size: 1.9rem;\n    }\n  }\n\n  h3 {\n    color: #F5FF7E;\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    font-size: 1.6rem;\n\n    @media (min-width: 767px) {\n      font-size: 2.5rem;\n    }\n  }\n`\nexport default Banner\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Slider from \"react-slick\"\nimport styled from 'styled-components'\nimport ButtonDefault from \"../../components/Button\"\nimport Banner from \"./Components/Banner\"\n// import Tabs from \"./Components/Tabs\"\n\nconst HomePage: React.FC = () => {\n  return (\n    <HomePageStyled>\n      <Banner/>\n      {/* <Tabs/> */}\n    </HomePageStyled>\n  )\n}\n\nconst HomePageStyled = styled.div`\n  .slick-track {\n    display: flex;\n    gap: 30px;\n  }\n`\n\nconst InformationNumber = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(285px, 1fr));\n  gap: 38px;\n  margin-bottom: 54px;\n\n  .item {\n    border: 3px solid #7ED5FF;\n    background: linear-gradient(180deg, #2C8CD1 0%, #297AC7 100%);\n    border-radius: 12px;\n    padding: 12px 0;\n    text-align: center;\n\n    span {\n      font-size: 1.5rem;\n      color: #ffffff;\n    }\n\n    h3 {\n      font-size: 1.7rem;\n      color: #9AFFF9;\n    }\n  }\n`\n\nconst ItemUpcomingIDO = styled.div`\n  padding: 0 32px 17px;\n  background: #2B458B;\n  border-radius: 17px;\n\n  figure {\n    margin: 0 -32px 31px;\n    position: relative;\n\n    img {\n      width: 100%;\n    }\n\n    span {\n      position: absolute;\n      left: 50%;\n      bottom: 0;\n      transform: translateX(-50%);\n      background-color: #ffffff;\n      color: #18AFF7;\n      padding: 7px 22px;\n      border-top-left-radius: 17px;\n      border-top-right-radius: 17px;\n      font-size: 1.63rem;\n      white-space: nowrap;\n      font-weight: 600;\n    }\n  }\n\n  .content {\n    display: grid;\n    grid-template-columns: repeat( auto-fit, minmax(130px, 1fr) );\n    gap: 30px;\n    color: #ffffff;\n    margin-bottom: 43px;\n\n    span,h3 {\n      text-transform: capitalize;\n    }\n\n    h3 {\n      color: #ffffff;\n      font-size: 1.6rem;\n    }\n\n    span {\n      color: #B5ACAC;\n      font-size: 1.25rem;\n    }\n\n    &__left {\n      text-align: left;\n    }\n\n    &__right {\n      text-align: right;\n    }\n  }\n`\n\nconst BoxSocial = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 22px;\n  padding: 7px 0;\n  margin-top: 15px;\n  background: #7ED5FF;\n  border-radius: 25px;\n\n  a {\n    cursor: pointer;\n\n    img {\n      transform: scale(1);\n      transition: .5s ease-in-out;\n    }\n\n    &:hover {\n      img {\n        transform: scale(1.1);\n        transition: .5s ease-in-out;\n      }\n    }\n  }\n`\nexport default HomePage\n","import {ConnectorNames} from '@diviner-protocol/uikit'\nimport {ConfigWallets} from 'config/constants/types'\n\nexport const connectorsMarket: ConfigWallets[] = [\n  {\n    title: 'Metamask',\n    icon: 'metamask.png',\n    connectorId: ConnectorNames.Injected,\n  },\n  {\n    title: 'Trust Wallet',\n    icon: 'trust-wallet.png',\n    connectorId: ConnectorNames.WalletConnect,\n  },\n  {\n    title: 'Wallet Connect',\n    icon: 'wallet-connect.png',\n    connectorId: ConnectorNames.WalletConnect,\n  },\n  {\n    title: 'Binance Wallet',\n    icon: 'binance-wallet.png',\n    connectorId: ConnectorNames.BSC,\n  },\n]\n","import styled from 'styled-components'\nimport { connectorLocalStorageKey, ConnectorNames } from '@diviner-protocol/uikit'\nimport { connectorsMarket } from 'config/constants/walletsMarket'\nimport useAuth from 'hooks/useAuth'\n\nconst ConnectWalletModal = ({ onClose }) => {\n  const { login } = useAuth()\n\n  const handleLogin = (connectorId: ConnectorNames) => {\n    login(connectorId)\n    window.localStorage.setItem(connectorLocalStorageKey, connectorId)\n    onClose()\n  }\n\n  return (\n    <BlockConnect>\n      <div className=\"connect-wallet\">\n        <p>Connect Wallet</p>\n        <p className=\"close\" onClick={onClose}>\n          X\n        </p>\n      </div>\n\n      <div className=\"list-icon\">\n        {connectorsMarket.map((config) => (\n          <div className=\"option\" onClick={() => handleLogin(config.connectorId)}>\n            <img src={`./images/connect-market/${config.icon}`} alt=\"\" className=\"icon\" />\n            <p className=\"name\">{config.title}</p>\n          </div>\n        ))}\n      </div>\n    </BlockConnect>\n  )\n}\n\nconst BlockConnect = styled.div`\n  height: 100%;\n  width: 100%;\n  background: #fff;\n  border-radius: 25px;\n  font-weight: bold;\n  color: #333333;\n  text-align: center;\n\n  @media (max-width: 767px) {\n    max-width: 360px;\n  }\n\n  .connect-wallet {\n    background: #55b3f8;\n    border-radius: 12px 12px 0px 0px;\n    height: 74px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n\n    p {\n      margin: 0;\n      color: #fff;\n      font-weight: 500;\n      font-size: 22px;\n    }\n\n    .close {\n      position: absolute;\n      top: 50%;\n      right: 33px;\n      transform: translate(-50%, -50%);\n      cursor: pointer;\n    }\n  }\n\n  .link {\n    display: flex;\n    justify-content: center;\n    font-weight: bold;\n    color: #333333;\n\n    p {\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n\n    .icon {\n      height: fit-content;\n      margin-right: 10px;\n      text-align: center;\n    }\n  }\n\n  .list-icon {\n    padding: 40px 60px;\n    display: grid;\n    grid-template-columns: repeat(2, 2fr);\n    grid-gap: 20px 80px;\n    justify-items: center;\n\n    .option {\n      cursor: pointer;\n      transition: ease all 0.5s;\n\n      &:hover {\n        opacity: 0.8;\n        transform: scale(0.9);\n      }\n\n      img {\n        padding-bottom: 16px;\n      }\n      \n      .name {\n        text-align: center;\n      }\n    }\n  }\n`\nexport default ConnectWalletModal\n","import GlobalModal from 'components/static/GlobalModal';\nimport { useActiveWeb3React } from 'hooks';\nimport useAuth from 'hooks/useAuth';\nimport React, { useEffect, useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { addCommas } from 'utils/formatNumber';\nimport ConnectWalletModal from './Modal/ConnectWalletModal';\n\nconst tokenList = {\n\tbnb: {\n\t\timg: '/images/market/binance.svg',\n\t},\n\tbusd: {\n\t\timg: '/images/market/busd.svg',\n\t},\n\tdpt: {\n\t\timg: '/images/tokens/dpt.svg',\n\t},\n};\n\nfunction Header({ bnbBalance, busdBalance, dptBalance }) {\n\tconst [isCollapsed, setIsCollapsed] = useState(true);\n\tconst [scroll, setScroll] = useState(false);\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tsetScroll(window.scrollY > 10);\n\t\t});\n\t}, []);\n\tconst { account } = useActiveWeb3React();\n\tconst { logout } = useAuth();\n\tconst trimAccount = account ? `${account.slice(0, 4)}...${account.slice(38)}` : '0x00...0000'; // account length: 42\n\n\treturn (\n\t\t<HeaderStyled className={scroll ? 'active' : 'close'}>\n\t\t\t<div className=\"header\">\n\t\t\t\t<Burger\n\t\t\t\t\tclassName={`burger menubar ${isCollapsed ? 'close' : 'is-active'} `}\n\t\t\t\t\tonClick={() => setIsCollapsed(!isCollapsed)}\n\t\t\t\t>\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t</Burger>\n\n\t\t\t\t<Link className=\"header__logo\" to=\"/\">\n\t\t\t\t\t<img src=\"/logo.png\" alt=\"logo\" className=\"header__logo-img\" />\n\t\t\t\t</Link>\n\n\t\t\t\t<BoxMenu className={`${isCollapsed ? 'close' : 'active'}`}>\n\t\t\t\t\t<ul className=\"header__menu\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<NavLink to=\"/\" exact>\n\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t{/* <li>\n\t\t\t\t\t\t\t<NavLink to=\"/project\">Project</NavLink>\n\t\t\t\t\t\t</li> */}\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<NavLink to=\"/staking\">Staking</NavLink>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"https://app.diviner.finance/#/\" target=\"_blank\" rel=\"noreferrer\">Game</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t{!account ? (\n\t\t\t\t\t\t<div className=\"header\"></div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"header__price mobile\">\n\t\t\t\t\t\t\t\t<div className=\"header__price--content\">\n\t\t\t\t\t\t\t\t\t<p>{addCommas(busdBalance)}</p>\n\t\t\t\t\t\t\t\t\t<img src={tokenList.busd.img} alt=\"price.svg\" />\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"header__price--content\">\n\t\t\t\t\t\t\t\t\t<p>{addCommas(dptBalance)}</p>\n\t\t\t\t\t\t\t\t\t<img src={tokenList.dpt.img} alt=\"price.svg\" />\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"header__price--content\">\n\t\t\t\t\t\t\t\t\t<p>{addCommas(bnbBalance)}</p>\n\t\t\t\t\t\t\t\t\t<img src={tokenList.bnb.img} alt=\"price.svg\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</BoxMenu>\n\t\t\t</div>\n\n\t\t\t{!account ? (\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"header__button\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tGlobalModal.show(<ConnectWalletModal onClose={GlobalModal.hide} />);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>Connect wallet</p>\n\t\t\t\t\t\t<img src=\"./images/icon-wallet.png\" alt=\"connect wallet\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<div className=\"header__price\">\n\t\t\t\t\t\t<div className=\"header__price--content\">\n\t\t\t\t\t\t\t<p>{addCommas(busdBalance)}</p>\n\t\t\t\t\t\t\t<img src={tokenList.busd.img} alt=\"price.svg\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"header__price--content\">\n\t\t\t\t\t\t\t<p>{addCommas(dptBalance)}</p>\n\t\t\t\t\t\t\t<img src={tokenList.dpt.img} alt=\"price.svg\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"header__price--content\">\n\t\t\t\t\t\t\t<p>{addCommas(bnbBalance)}</p>\n\t\t\t\t\t\t\t<img src={tokenList.bnb.img} alt=\"price.svg\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"header__account\">\n\t\t\t\t\t\t\t{!account ? <p>Connect wallet</p> : <p>{trimAccount}</p>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"header__account mobile\">\n\t\t\t\t\t\t{!account ? <p>Connect wallet</p> : <p>{trimAccount}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button className=\"header__button\" type=\"submit\" onClick={logout}>\n\t\t\t\t\t\t<p>Logout</p>\n\t\t\t\t\t\t<img src=\"./images/icon-wallet.png\" alt=\"connect wallet\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</HeaderStyled>\n\t);\n}\n\nconst BoxMenu = styled.div`\n\tz-index: 3;\n\tposition: absolute;\n\ttop: 14px;\n\tleft: -100%;\n\twidth: 75%;\n\theight: 532px;\n\toverflow: hidden;\n\tbackground: rgba(0, 6, 10, 1);\n\tpadding: 42px 0 20px;\n\tbox-sizing: border-box;\n\ttransition: all 0.3s cubic-bezier(0.27, 0.16, 0.36, 0.99);\n\n\t@media (min-width: 1025px) {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\tz-index: 3;\n\t\tposition: unset;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: auto;\n\t\toverflow: hidden;\n\t\tbackground: transparent;\n\t\tpadding: 0;\n\t}\n\n\t&.active {\n\t\tleft: 14px;\n\n\t\tul {\n\t\t\tlist-style-type: none;\n\t\t\twidth: 100%;\n\t\t\tpadding: 0;\n\t\t\t@media (max-width: 1025px) {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\n\t\t\t@media (max-width: 767px) {\n\t\t\t\tpadding-top: 10px;\n\t\t\t}\n\n\t\t\tli {\n\t\t\t\ttransition: all 0.3s cubic-bezier(0.27, 0.16, 0.36, 0.99);\n\t\t\t\tposition: relative;\n\t\t\t\tleft: 0;\n\t\t\t\tposition: relative;\n\t\t\t\tpadding: 10px;\n\t\t\t\tfont-size: 24px;\n\t\t\t\tcursor: pointer;\n\t\t\t\ttext-align: center;\n\n\t\t\t\t@media (max-width: 769px) {\n\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\tpadding: 15px 10px;\n\t\t\t\t}\n\n\t\t\t\t&:nth-of-type(1) {\n\t\t\t\t\ttransition-delay: 0.2s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(2) {\n\t\t\t\t\ttransition-delay: 0.25s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(3) {\n\t\t\t\t\ttransition-delay: 0.3s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(4) {\n\t\t\t\t\ttransition-delay: 0.35s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(5) {\n\t\t\t\t\ttransition-delay: 0.4s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(6) {\n\t\t\t\t\ttransition-delay: 0.45s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(7) {\n\t\t\t\t\ttransition-delay: 0.5s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(8) {\n\t\t\t\t\ttransition-delay: 0.55s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(9) {\n\t\t\t\t\ttransition-delay: 0.6s;\n\t\t\t\t}\n\t\t\t\t&:nth-of-type(10) {\n\t\t\t\t\ttransition-delay: 0.65s;\n\t\t\t\t}\n\n\t\t\t\ta {\n\t\t\t\t\tcolor: ${(props) => props.theme.colors.white};\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&a {\n\t\t\tcolor: #ffe600;\n\t\t\tposition: relative;\n\n\t\t\t:before {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: -20px;\n\t\t\t\twidth: 25px;\n\t\t\t\theight: 25px;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\tbackground-size: cover;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Burger = styled.div`\n\tposition: absolute;\n\ttop: 21px;\n\tleft: 21px;\n\tz-index: 4;\n\tcursor: pointer;\n\tdisplay: block;\n\n\t@media (min-width: 1025px) {\n\t\tdisplay: none;\n\t}\n\n\t&.is-active {\n\t\tspan {\n\t\t\ttransition: transform 0.6s cubic-bezier(0.54, 0.1, 0.42, 1.48), width 0.6s ease-in;\n\n\t\t\t&:first-child {\n\t\t\t\ttransform: rotate(45deg) translate(5px, -5px);\n\t\t\t\twidth: 19px;\n\t\t\t}\n\n\t\t\t&:nth-child(2) {\n\t\t\t\ttransform: rotate(-45deg);\n\t\t\t\twidth: 38px;\n\t\t\t}\n\n\t\t\t&:last-child {\n\t\t\t\ttransform: rotate(45deg) translate(12px, -10px);\n\t\t\t\twidth: 19px;\n\t\t\t}\n\t\t}\n\t}\n\n\tspan {\n\t\tdisplay: block;\n\t\theight: 5px;\n\t\tbackground: linear-gradient(0deg, rgba(247, 224, 0, 1) 0%, rgba(239, 152, 0, 1) 100%);\n\t\tborder-radius: 20px;\n\t\ttransition: transform 0.6s cubic-bezier(0.54, 0.1, 0.42, 1.48), width 0.6s ease-out;\n\n\t\t&:not(:last-child) {\n\t\t\tmargin-bottom: 7px;\n\t\t}\n\n\t\t&:first-child {\n\t\t\ttransform-origin: 0 50%;\n\t\t\twidth: 20px;\n\t\t}\n\n\t\t&:nth-child(2) {\n\t\t\twidth: 37px;\n\t\t}\n\n\t\t&:last-child {\n\t\t\ttransform-origin: 100% 50%;\n\t\t\twidth: 30px;\n\t\t}\n\t}\n`;\n\nconst HeaderStyled = styled.div`\n\tbackground: #1a48a1;\n\tdisplay: grid;\n\tgrid-template-columns: 130px 140px 100px;\n\tgap: 20px;\n\theight: 80px;\n\twidth: 100%;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 999;\n\n\t.header__logo {\n\t\t@media (max-width: 1024px) {\n\t\t\tmargin-left: 40px;\n\t\t}\n\t}\n\n\t@media (min-width: 767px) {\n\t\theight: auto;\n\t\tdisplay: flex;\n\t\tjustify-content: unset;\n\t}\n\n\t&.active {\n\t\t@media (min-width: 767px) {\n\t\t\ttop: 0;\n\t\t\tdisplay: block;\n\t\t\ttransition-duration: 0.6s;\n\t\t}\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t\tcolor: #bac8e3;\n\t\tfont-size: 18px;\n\t\tfont-weight: 500;\n\t}\n\n\t.header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\n\t\t&__logo {\n\t\t\t@media (max-width: 768px) {\n\t\t\t\tmargin: 10px;\n\t\t\t}\n\n\t\t\t@media (max-width: 767px) {\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin: 0 auto;\n\t\t\t}\n\n\t\t\t&-img {\n\t\t\t\tpadding: 0px 60px;\n\t\t\t\twidth: 200px;\n\n\t\t\t\t@media (min-width: 769px) {\n\t\t\t\t\twidth: auto;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&__menu {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tlist-style: none;\n\t\t\tmargin-bottom: 0;\n\n\t\t\t@media (min-width: 769px) {\n\t\t\t\tflex-direction: unset;\n\t\t\t}\n\n\t\t\tli {\n\t\t\t\t@media (max-width: 1024px) {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tpadding: 0 !important;\n\t\t\t\t}\n\n\t\t\t\ta {\n\t\t\t\t\tpadding: 20px;\n\t\t\t\t\ttransition: ease all 0.5s;\n\t\t\t\t\tborder-bottom: solid transparent 6px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tcolor: #ffffff;\n\t\t\t\t\tfont-size: 1.2rem;\n\t\t\t\t\tfont-weight: 400;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\tdisplay: block;\n\n\t\t\t\t\t@media (max-width: 767px) {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\tpadding: 15px;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tbackground: #2a62b4;\n\t\t\t\t\t\tborder-bottom: solid #10a7f3 6px;\n\t\t\t\t\t}\n\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tbackground: #2a62b4;\n\t\t\t\t\t\tborder-bottom: solid #10a7f3 6px;\n\t\t\t\t\t\tcolor: #fff;\n\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tcolor: #ffffff;\n\t\t\t\t\t\t\tfont-size: 1.2rem;\n\t\t\t\t\t\t\tfont-weight: 500;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&__price {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: left;\n\t\t\talign-items: center;\n\t\t\tbackground: #123271;\n\t\t\tborder-radius: 30px;\n\t\t\tpadding: 5px;\n\t\t\theight: 46px;\n\n\t\t\t@media (max-width: 767px) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t&.mobile {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 100%;\n\t\t\t\tbackground: transparent;\n\n\t\t\t\t@media (min-width: 767px) {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-weight: 400;\n\n\t\t\t\t@media (max-width: 769px) {\n\t\t\t\t\twidth: 61px;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t}\n\n\t\t\t\t@media (max-width: 767px) {\n\t\t\t\t\twidth: auto;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&--content {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: left;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding: 0px 15px;\n\n\t\t\t\t@media (max-width: 767px) {\n\t\t\t\t\tmargin-bottom: 15px;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tbackground-color: #123271;\n\t\t\t\t\tborder-radius: 16px;\n\t\t\t\t\tpadding: 10px 20px;\n\t\t\t\t}\n\n\t\t\t\t&:nth-child(2) {\n\t\t\t\t\tborder-right: none;\n\n\t\t\t\t\t@media (min-width: 767px) {\n\t\t\t\t\t\tborder-right: 1px solid #fff;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t&:nth-child(1) {\n\t\t\t\t\tborder-right: none;\n\n\t\t\t\t\t@media (min-width: 767px) {\n\t\t\t\t\t\tborder-right: 1px solid #fff;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t}\n\n\t\t\t\timg {\n\t\t\t\t\tmargin-top: -4px;\n\t\t\t\t\tpadding-left: 5px;\n\t\t\t\t\twidth: 24px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&__account {\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 5px;\n\n\t\t\t&.mobile {\n\t\t\t\tdisplay: block;\n\n\t\t\t\t@media (min-width: 767px) {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\tp {\n\t\t\t\t\twidth: 120px;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t&__button {\n\t\t\tbackground: url('./images/market/header-button.png') no-repeat;\n\t\t\tbackground-size: 100% 100%;\n\t\t\tcursor: pointer;\n\t\t\twidth: 100%;\n\t\t\tmax-width: 160px;\n\t\t\theight: 46px;\n\t\t\tline-height: 46px;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tmargin-right: 20px;\n\t\t\tmargin-left: 20px;\n\t\t\tpadding: 0 20px;\n\t\t\ttransform: scale(1);\n\t\t\ttransition: 0.5s ease-in-out;\n\t\t\tborder: none;\n\n\t\t\t@media (max-width: 767px) {\n\t\t\t\tbackground: unset;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 11px;\n\t\t\t\tright: -61px;\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\ttransform: scale(1.1);\n\t\t\t\ttransition: 0.5s ease-in-out;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tdisplay: none;\n\t\t\t\twhite-space: nowrap;\n\n\t\t\t\t@media (min-width: 767px) {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timg {\n\t\t\t\tdisplay: block;\n\t\t\t\tmax-width: 30px;\n\n\t\t\t\t@media (min-width: 767px) {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.header {\n\t\t&:nth-child(1) {\n\t\t\tjustify-content: left;\n\t\t\twidth: 100%;\n\n\t\t\t@media (min-width: 769px) {\n\t\t\t\twidth: 60%;\n\t\t\t}\n\t\t}\n\t}\n\n\t.header {\n\t\t&:nth-child(2) {\n\t\t\tjustify-content: flex-start;\n\t\t\twidth: 100%;\n\n\t\t\t@media (min-width: 767px) {\n\t\t\t\twidth: 40%;\n\t\t\t\tjustify-content: right;\n\t\t\t}\n\t\t}\n\t}\n`;\nexport default Header;\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nfunction MyButton({ onClick = null, Name, disabled = false }) {\n  return (\n    <ButtonStyles>\n      <Button disabled={disabled} className=\"my-button\" onClick={onClick}>\n        {Name}\n      </Button>\n    </ButtonStyles>\n  );\n}\n\nconst ButtonStyles = styled.div`\n  width: 100%;\n  background: unset;\n  border: unset;\n  /* padding: 0 40px; */\n\n  button[disabled] {\n    background-color: transparent !important;\n    cursor: not-allowed;\n    border: solid 1px #ffffff78 !important;\n\n    &:hover {\n      border: solid 1px #ffffff78 !important;\n    }\n  }\n\n  .my-button {\n    border: unset;\n    cursor: pointer;\n    background: #55B3F8;\n    border-radius: 24px;\n    width: 100%;\n    height: 39px;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    color: #ffffff;\n    transition: 0.5s ease-in-out;\n    font-size: 20px;\n    font-weight: 400;\n\n    &:hover {\n      color: #ffffff;\n      border: solid 1px #ffffff !important;\n    }\n  }\n`;\n\nexport default MyButton;\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { AppDispatch, AppState, useAppDispatch } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails, TransactionStatus } from './reducer'\n\nexport const useTransactionAdder = () => {\n  const dispatch = useAppDispatch()\n\n  return ({ callData }) => {\n    dispatch(addTransaction({ callData }))\n  }\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return state\n}\n\nexport const useHasPendingTransaction = (callData: string) => {\n  const transactions = useAllTransactions()\n\n  if (transactions[callData]?.status === TransactionStatus.pending) return true\n\n  return false\n}\n","import { getAddress } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { ChainId, Currency, CurrencyAmount, JSBI, Percent, Token } from '@diviner-protocol/v2-sdk'\nimport { TokenAddressMap } from '../state/lists/hooks'\nimport { BLOCK_EXPLORER_URLS } from '../constants'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\n  const prefix = BLOCK_EXPLORER_URLS[chainId][0]\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency?.isNative) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_ABI }\n","import { ChainId, AddressMap } from '@diviner-protocol/v2-sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: AddressMap = {\n  [ChainId.BSC]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb', // TODO\n  [ChainId.BSC_TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n  [ChainId.MATIC]: '0x95028E5B8a734bb7E2071F96De89BABe75be9C8E',\n  [ChainId.MATIC_TESTNET]: '0x9Fc8e50Eb08C1F463b45d1AFb9c261B0a1903006',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { ROUTER_ADDRESSES, WNATIVE } from \"@diviner-protocol/v2-sdk\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/IUniswapV2Pair.json\";\nimport SMART_CHEF_ABI from \"config/abi/smartChef.json\";\nimport { useActiveWeb3React } from \"hooks\";\nimport { useMemo } from \"react\";\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\nimport { ERC20_BYTES32_ABI } from \"../constants/abis/erc20\";\nimport ERC20_ABI from \"../constants/abis/erc20.json\";\nimport ROUTER_ABI from \"../constants/abis/router.json\";\nimport WETH_ABI from \"../constants/abis/weth.json\";\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\nimport { getContract } from \"../utils\";\nimport {\n  getErc721Contract,\n  getBep20Contract,\n  getCakeContract,\n  getCharacterContract,\n  getChestMarketContract,\n  getFakeCharacterContract,\n  getFaucetContract,\n  getGameContract,\n  getIfoContract,\n  getStakingContract,\n  getPredictionContracts,\n} from \"../utils/contractHelpers\";\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport function useENSRegistrarContract(\n  withSignerIfPossible?: boolean\n): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  let address: string | undefined;\n  if (chainId) {\n    switch (chainId) {\n      case 56:\n      case 97:\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\nexport function useRouterContract(\n  withSignerIfPossible?: boolean\n): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    ROUTER_ADDRESSES[chainId],\n    ROUTER_ABI,\n    withSignerIfPossible\n  );\n}\n\nexport function useContract(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true\n): Contract | null {\n  const { library, account } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined\n      );\n    } catch (error) {\n      console.error(\"Failed to get contract\", error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useBytes32TokenContract(\n  tokenAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\nexport function useTokenContract(\n  tokenAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\nexport const useIfoContract = (address: string) => {\n  const { library } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getIfoContract(address, signer), [address, signer]);\n};\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getBep20Contract(address, signer), [address, signer]);\n};\n\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getErc721Contract(address, signer), [address, signer]);\n};\n\nexport const usePredictionContracts = () => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(\n    () => getPredictionContracts(signer, chainId),\n    [signer, chainId]\n  );\n};\n\nexport const useCake = () => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getCakeContract(signer, chainId), [signer, chainId]);\n};\n\nexport function useENSResolverContract(\n  address: string | undefined,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useWETHContract(\n  withSignerIfPossible?: boolean\n): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId ? WNATIVE[chainId].address : undefined,\n    WETH_ABI,\n    withSignerIfPossible\n  );\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId && MULTICALL_NETWORKS[chainId],\n    MULTICALL_ABI,\n    false\n  );\n}\nexport function usePairContract(\n  pairAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\nexport const useCharacterContract = (): Contract | null => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(\n    () => getCharacterContract(signer, chainId),\n    [signer, chainId]\n  );\n};\n\nexport const useFakeCharacterContract = (): Contract | null => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(\n    () => getFakeCharacterContract(signer, chainId),\n    [signer, chainId]\n  );\n};\n\nexport const useChestMarketContract = () => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(\n    () => getChestMarketContract(signer, chainId),\n    [signer, chainId]\n  );\n};\n\nexport const useGameContract = () => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getGameContract(signer, chainId), [signer, chainId]);\n};\n\nexport const useFaucetContract = () => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getFaucetContract(signer, chainId), [signer, chainId]);\n};\n\nexport const useStakingContract = (): Contract | null => {\n  const { library, chainId } = useActiveWeb3React();\n  const signer = library.getSigner();\n  return useMemo(() => getStakingContract(signer, chainId), [signer, chainId]);\n};\n","import { MaxUint256 } from \"@ethersproject/constants\";\nimport { TransactionResponse } from \"@ethersproject/providers\";\nimport { useCallback } from \"react\";\nimport { useTransactionAdder } from \"state/transactions/hooks\";\nimport { calculateGasMargin } from \"utils\";\nimport { useTokenContract } from \"./useContract\";\nimport { useAppDispatch } from \"../state/index\";\nimport {\n  finalizeTransaction,\n  errorTransaction,\n} from \"../state/transactions/actions\";\nimport { getCallData } from \"../state/transactions/utils\";\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallbackCustom(\n  token?: any,\n  addressNeedApprove?: string\n): [() => Promise<TransactionResponse>] {\n  const tokenContract = useTokenContract(token);\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<TransactionResponse> => {\n    const estimatedGas = await tokenContract.estimateGas\n      .approve(addressNeedApprove, MaxUint256)\n      .catch(() => {\n        return tokenContract.estimateGas.approve(\n          addressNeedApprove,\n          MaxUint256\n        );\n      });\n\n    return tokenContract\n      .approve(addressNeedApprove, MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        // addTransaction(response, {\n        //   summary: `Approve  successfully!`,\n        // })\n        return response;\n      })\n      .catch((error: Error) => {\n        console.debug(\"Failed to approve token\", error);\n        throw error;\n      });\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [tokenContract, addressNeedApprove]);\n\n  return [approve];\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport { useCallback } from \"react\";\nimport { calculateGasMargin } from \"utils\";\nimport { useStakingContract } from \"./useContract\";\n\nconst useStake = (poolId: number) => {\n  const { account } = useWeb3React();\n  const stakingContract = useStakingContract();\n\n  const handleStake = useCallback(\n    async (amount: number) => {\n      const value = ethers.utils.parseEther(amount.toString()).toString();\n      const estimatedGas = await stakingContract.estimateGas\n        .deposit(poolId, value)\n\n        .catch(() => {\n          return stakingContract.estimateGas.deposit(poolId, value);\n        });\n      const txHash = await stakingContract.deposit(poolId, value, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      });\n      return txHash;\n    },\n    [account, stakingContract, poolId]\n  );\n\n  const handleClaim = useCallback(async () => {\n    const txHash = await stakingContract.withdraw(poolId, false);\n    return txHash;\n  }, [account, stakingContract]);\n\n  const handleWithdraw = useCallback(async () => {\n    const txHash = await stakingContract.withdraw(poolId, true);\n    return txHash;\n  }, [account, stakingContract, poolId]);\n\n  return {\n    onStake: handleStake,\n    onClaim: handleClaim,\n    onWithdraw: handleWithdraw,\n  };\n};\n\nexport default useStake;\n","import { InputNumber } from \"antd\";\nimport BigNumber from \"bignumber.js\";\nimport MyButton from \"components/Button\";\nimport ConnectWalletModal from \"components/Modal/ConnectWalletModal\";\nimport GlobalModal from \"components/static/GlobalModal\";\nimport tokens from \"config/constants/tokens\";\nimport { utils } from \"ethers\";\nimport { useActiveWeb3React } from \"hooks\";\nimport { useApproveCallbackCustom } from \"hooks/useApprove\";\nimport useStake from \"hooks/useStaking\";\nimport React, { useState } from \"react\";\nimport { useAppDispatch } from \"state\";\nimport {\n  fetchPoolWithId,\n  fetchUserTokenData,\n  setPendingRewardToZero,\n} from \"state/staking\";\nimport { useUserDataSelector } from \"state/staking/selector\";\nimport { PoolInfo, UserStakingData } from \"state/types\";\nimport styled from \"styled-components\";\nimport { getAddress, getStakingAddress } from \"utils/addressHelpers\";\nimport { maxNumberAfterDot } from \"utils/formatNumber\";\n\nconst PoolCard: React.FC<{ pool: PoolInfo }> = ({ pool }) => {\n  const [isApproving, setIsApproving] = useState<boolean>(false);\n  const [isStaking, setIsStaking] = useState<boolean>(false);\n  const [isClaiming, setIsClaiming] = useState<boolean>(false);\n  const [isWithdrawing, setWithdrawing] = useState<boolean>(false);\n  const [depositValue, setDepositValue] = useState<number>();\n\n  const { account } = useActiveWeb3React();\n  const dispatch = useAppDispatch();\n\n  const { userTokenData, userPoolData }: UserStakingData =\n    useUserDataSelector();\n  const { onStake, onClaim, onWithdraw } = useStake(pool.poolId);\n  const [onApproveAngel] = useApproveCallbackCustom(\n    getAddress(\n      pool.title === \"DPT\" ? tokens.dpt.address : tokens.dptBnb.address\n    ),\n    getStakingAddress()\n  );\n\n  const handleApprove = async () => {\n    setIsApproving(true);\n    try {\n      const tx = await onApproveAngel();\n      await tx?.wait();\n      dispatch(fetchUserTokenData(account));\n    } catch (error) {\n      console.log(\"error approve\");\n    } finally {\n      setIsApproving(false);\n    }\n  };\n\n  const handleStake = async () => {\n    try {\n      setIsStaking(true);\n      const tx = await onStake(depositValue);\n\n      const result = await tx.wait();\n\n      dispatch(fetchPoolWithId({ account, poolId: pool.poolId }));\n      dispatch(fetchUserTokenData(account));\n    } catch (error: any) {\n      console.log(\"error stake\");\n    } finally {\n      setIsStaking(false);\n    }\n  };\n\n  const handleClaim = async () => {\n    try {\n      setIsClaiming(true);\n      const tx = await onClaim();\n\n      const result = await tx.wait();\n\n      dispatch(fetchUserTokenData(account));\n      dispatch(setPendingRewardToZero(pool.poolId));\n    } catch (error: any) {\n      console.log(\"error claim\", error);\n    } finally {\n      setIsClaiming(false);\n    }\n  };\n\n  const handleWithdraw = async () => {\n    try {\n      setWithdrawing(true);\n      const tx = await onWithdraw();\n\n      const result = await tx.wait();\n\n      dispatch(fetchUserTokenData(account));\n      dispatch(setPendingRewardToZero(pool.poolId));\n      dispatch(fetchPoolWithId({ account, poolId: pool.poolId }));\n    } catch (error: any) {\n      console.log(\"error withdraw\", error);\n    } finally {\n      setWithdrawing(false);\n    }\n  };\n\n  const handleMax = () => {\n    console.log(\n      \"max\",\n      new BigNumber(\n        pool.title === \"DPT\"\n          ? userTokenData.dptBalance\n          : userTokenData.lpBalance\n      )\n        .div(1e18)\n        .toNumber()\n    );\n    setDepositValue(\n      new BigNumber(\n        pool.title === \"DPT\"\n          ? userTokenData.dptBalance\n          : userTokenData.lpBalance\n      )\n        .div(1e18)\n        .toNumber()\n    );\n  };\n  // if (pool.poolId === 0) {\n  //   console.log(\"date now\", Date.now());\n  // console.log(\"pool.lockingTime\", pool.lockingTime);\n  //   console.log(\n  //     \"first time\",\n  //     typeof userPoolData?.[pool?.poolId]?.firstTimeDeposit\n  //   );\n  //   console.log(\n  //     \"remain time\",\n  //     userPoolData?.[pool?.poolId]?.firstTimeDeposit * 1000 +\n  //       pool.lockingTime -\n  //       Date.now()\n  //   );\n  // }\n  return (\n    <Item key={pool.poolId}>\n      <div className=\"content__border\">\n        <div className=\"content__icon\">\n          {pool.title === \"DPT\" ? (\n            <div className=\"content__icon-logo\">\n              <img src=\"/logo.png\" alt=\"logo.png\" />\n            </div>\n          ) : (\n            <div className=\"content__icon-logo__tokens\">\n              <img\n                className=\"bnb__tokens\"\n                src=\"./images/tokens/bnb.png\"\n                alt=\"bnb.png\"\n              />\n              <div className=\"content__icon-logo\">\n                <img src=\"/logo.png\" alt=\"logo.png\" />\n              </div>\n            </div>\n          )}\n\n          <span className=\"price__dpt\">{pool.title}</span>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"content__list\">\n          <div className=\"content__list-item\">\n            <div className=\"content__list-item__left\">Total Staked</div>\n            <div className=\"content__list-item__right\">\n              {maxNumberAfterDot(utils.formatEther(pool.totalAmount), 2)}{\" \"}\n              <span>DPT</span>\n            </div>\n          </div>\n\n          <div className=\"content__list-item\">\n            <div className=\"content__list-item__left apr\">\n              APR\n              {/* <img src=\"./images/staking/apr.svg\" alt=\"apr.svg\" /> */}\n            </div>\n            <div className=\"content__list-item__right\">\n              {/* {maxNumberAfterDot(pool?.apy ?? \"0\", 2)} <span>%</span> */}\n              <p>{pool?.apy}</p><span>%</span>\n            </div>\n          </div>\n\n          <div className=\"content__list-item\">\n            <div className=\"content__list-item__left\">Lock-up term</div>\n            <div className=\"content__list-item__right\">\n              <p>{pool.lockingTime / 86400}</p> <span>days</span>\n            </div>\n          </div>\n        </div>\n\n        {!account ? (\n          <div className=\"content__button\" style={{ paddingBottom: \"23px\" }}>\n            <MyButton\n              Name=\"Connect Wallet\"\n              onClick={() =>\n                GlobalModal.show(\n                  <ConnectWalletModal onClose={GlobalModal.hide} />\n                )\n              }\n            ></MyButton>\n          </div>\n        ) : (\n          <>\n            <div className=\"content__list\">\n              <div className=\"content__list-item\">\n                <div className=\"content__list-item__left\">My staked</div>\n                <div className=\"content__list-item__right\">\n                  {maxNumberAfterDot(\n                    utils.formatEther(\n                      userPoolData?.[pool?.poolId]?.amountStaked ?? \"0\"\n                    ),\n                    2\n                  )}\n                  <span>{pool.title}</span>\n                </div>\n              </div>\n              <div className=\"content__list-item\">\n                <div className=\"content__list-item__left\">Locked until </div>\n                <div className=\"content__list-item__right\">\n                  <span>\n                    {userPoolData?.[pool?.poolId]?.firstTimeDeposit === 0\n                      ? \" --/--/----\"\n                      : new Date(\n                          userPoolData?.[pool?.poolId]?.firstTimeDeposit *\n                            1000 +\n                            pool.lockingTime\n                        ).toLocaleDateString(\"en-GB\")}\n                  </span>\n                </div>\n              </div>\n\n              {(\n                pool.title === \"DPT\"\n                  ? userTokenData.dptAllowance === \"0\"\n                  : userTokenData.lpAllowance === \"0\"\n              ) ? (\n                <div className=\"content__button\">\n                  <MyButton\n                    Name={`Approve ${pool.title}`}\n                    onClick={handleApprove}\n                    disabled={isApproving}\n                  ></MyButton>\n                </div>\n              ) : (\n                <>\n                  <InputNumber\n                    controls={false}\n                    min={0}\n                    addonBefore=\"Deposit:\"\n                    addonAfter={<div onClick={handleMax}>Max</div>}\n                    defaultValue={depositValue}\n                    value={depositValue}\n                    onChange={(e) => {\n                      if (e > 0) setDepositValue(e);\n                    }}\n                  />\n                  <div className=\"content__button\">\n                    <MyButton\n                      Name=\"Stake\"\n                      onClick={handleStake}\n                      disabled={isStaking}\n                    ></MyButton>\n                  </div>\n                </>\n              )}\n            </div>\n\n            <div className=\"content__list bottom\">\n              <div className=\"content__list-item\">\n                <div className=\"content__list-item__left\">DPT Earned</div>\n                <div className=\"content__list-item__right\">\n                  {maxNumberAfterDot(\n                    utils.formatEther(\n                      userPoolData?.[pool.poolId]?.pendingReward ?? \"0\"\n                    ),\n                    2\n                  )}\n                </div>\n              </div>\n\n              {userPoolData?.[pool?.poolId]?.firstTimeDeposit !== 0 &&\n              (userPoolData?.[pool?.poolId]?.firstTimeDeposit +\n                pool.lockingTime) *\n                1000 <\n                Date.now() &&\n              userPoolData?.[pool?.poolId]?.amountStaked !== \"0\" ? (\n                <div className=\"content__button\">\n                  <MyButton\n                    Name=\"Withdraw All\"\n                    onClick={handleWithdraw}\n                    disabled={isWithdrawing}\n                  ></MyButton>\n                </div>\n              ) : (\n                <div className=\"content__button\">\n                  <MyButton\n                    Name=\"Harvest\"\n                    onClick={handleClaim}\n                    disabled={\n                      isClaiming ||\n                      userPoolData?.[pool?.poolId]?.pendingReward === \"0\"\n                    }\n                  ></MyButton>\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </Item>\n  );\n};\n\nconst Item = styled.div`\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\n    #2b458b;\n  border-radius: 25px;\n  font-size: 18px;\n  font-weight: 700;\n\n  .content__border {\n    color: #ffffff;\n    font-size: 2.25rem;\n    font-weight: 700;\n    background-color: #35beff;\n    border-top-left-radius: 25px;\n    border-top-right-radius: 25px;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    padding: 15px 0px 15px 45px;\n  }\n\n  .content {\n    margin-top: 18px;\n    padding: 0 40px;\n\n    .content__button {\n      padding-top: 20px;\n    }\n\n    &__icon {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding-bottom: 12px;\n\n      .price__dpt {\n        font-size: 2.3rem;\n        font-weight: 500;\n      }\n\n      &-logo__tokens {\n        position: relative;\n\n        .bnb__tokens {\n          position: absolute;\n          top: -5px;\n          left: -18px;\n          width: 35px;\n          height: 35px;\n        }\n      }\n\n      &-logo {\n        width: 70px;\n        height: 70px;\n        background: #fff;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: 50%;\n        padding: 0px 3px;\n        margin-right: 20px;\n        position: relative;\n\n        img {\n          width: 100%;\n        }\n      }\n\n      span {\n        color: #ffffff;\n      }\n    }\n\n    &__list {\n      color: #ffffff;\n      padding: 25px 0 20px;\n      border-bottom: 1px solid #556aa2;\n\n      &-item {\n        display: flex;\n        justify-content: space-between;\n        padding-bottom: 25px;\n        &__left {\n          color: #0da0e5;\n        }\n\n        &__left {\n          &.apr {\n            img {\n              margin-left: 7px;\n            }\n          }\n        }\n\n        &__right {\n          display: flex;\n          justify-content: left;\n          align-items: center;\n\n          .harvest {\n            display: flex;\n            align-items: center;\n            align-items: center;\n            background: #bcb2b2;\n            color: #fff9f9;\n            font-size: 14px;\n            font-weight: 400;\n            border-radius: 37px;\n            padding: 5px 10px;\n            margin-left: 20px;\n          }\n\n          p {\n            width: 150px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n            text-align: right;\n          }\n\n          span {\n            padding-left: 7px;\n          }\n        }\n      }\n\n      &-item {\n        &:last-child {\n          padding-bottom: 0px;\n        }\n      }\n\n      .ant-input-number-group-wrapper {\n        width: 100%;\n      }\n\n      .ant-input-number-group {\n        height: 39px;\n\n        .ant-input-number {\n          height: 39px;\n          display: flex;\n          align-items: center;\n        }\n      }\n\n      .ant-input-number {\n        &.ant-input-number-focused {\n          border: unset;\n          box-shadow: unset;\n        }\n\n        input {\n          color: #CDCDCD;\n          font-size: 1.3rem;\n          text-align: right;\n        }\n      }\n\n      .ant-input-number-group-addon {\n        border: unset;\n        color: #7a7878;\n        background: #fff;\n        border-radius: 37px 0px 0px 37px;\n        padding:0 24px;\n        cursor: pointer;\n      }\n\n      .ant-input-number-group-addon {\n        &:last-child {\n          color: #18aff7;\n          border-radius: 0px 37px 37px 0px;\n        }\n      }\n\n      .ant-input-number {\n        border: unset;\n      }\n    }\n\n    &__list.bottom {\n      margin-bottom: 0px;\n      border-bottom: unset;\n\n      .content__button {\n        padding-top: 0px;\n        .my-button {\n          background: unset;\n          border: solid 1px #fff;\n          \n          &:hover {\n            background: rgb(24, 175, 247);\n            border: unset;\n            transform: scale(1);\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PoolCard;\n","import { useSelector } from \"react-redux\";\nimport { State } from \"../types\";\n\nexport const useUserDataSelector = () => {\n  const userData = useSelector((state: State) => state.staking.userData);\n  return userData;\n};\n\nexport const useUserTokensDataSelector = () => {\n  const userTokensInfo = useSelector(\n    (state: State) => state.staking.userData.userTokenData\n  );\n\n  return userTokensInfo;\n};\n\nexport const useUserPoolDataSelector = () => {\n  const userPoolsData = useSelector(\n    (state: State) => state.staking.userData.userPoolData\n  );\n  return userPoolsData;\n};\n\nexport const usePoolsSelector = () => {\n  const pools = useSelector((state: State) => state.staking.poolInfo);\n  return pools;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { PoolInfo, UserPoolData } from \"state/types\";\nimport PoolCard from \"./PoolCard\";\n\nconst Staking: React.FC<{ stakingList: PoolInfo[] }> = ({ stakingList }) => {\n  return (\n    <StakingStyled>\n      {stakingList.map((pool, index) => (\n        <PoolCard pool={pool} />\n      ))}\n    </StakingStyled>\n  );\n};\n\nconst StakingStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (max-width: 500px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  padding: 40px 0px;\n`;\n\nexport default Staking;\n","import { Tabs } from \"antd\";\nimport { useActiveWeb3React } from \"hooks\";\nimport React, { useEffect } from \"react\";\nimport { useAppDispatch } from \"state\";\nimport { fetchGameUserData, fetchPoolsData } from \"state/staking\";\nimport { usePoolsSelector } from \"state/staking/selector\";\nimport styled from \"styled-components\";\nimport Staking from \"./Components/StakingColumn\";\n\nconst { TabPane } = Tabs;\n\nfunction PageStaking() {\n  const { account } = useActiveWeb3React();\n  const dispatch = useAppDispatch();\n  const pools = usePoolsSelector();\n\n  const dptPools = pools.slice(0, 3);\n  const lpPools = pools.slice(3, 6);\n  useEffect(() => {\n    dispatch(fetchPoolsData());\n    if (account) dispatch(fetchGameUserData(account));\n  }, [account]);\n\n  return (\n    <PageStakingStyled>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Live\" key=\"1\">\n          <Staking stakingList={dptPools} />\n          <Staking stakingList={lpPools} />\n        </TabPane>\n        <TabPane tab=\"Finished\" key=\"2\">\n          <Staking stakingList={[]} />\n          <Staking stakingList={[]} />\n        </TabPane>\n      </Tabs>\n    </PageStakingStyled>\n  );\n}\n\nconst PageStakingStyled = styled.div`\n  .ant-tabs-nav {\n    width: 100%;\n    margin: 0 auto;\n\n    &::before {\n      border-radius: 17px 17px 0px 0px;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.24);\n    }\n\n    .ant-tabs-nav-wrap {\n      justify-content: space-between;\n\n      .ant-tabs-tab {\n        width: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .ant-tabs-tab-btn {\n          color: #a6c2e3;\n          font-size: 26px;\n          font-weight: 800;\n        }\n      }\n      .ant-tabs-tab.ant-tabs-tab-active {\n        .ant-tabs-tab-btn {\n          color: #bddbfe;\n        }\n      }\n    }\n  }\n`;\n\nexport default PageStaking;\n","import { useWeb3React } from \"@web3-react/core\";\nimport { utils } from \"ethers\";\n// import LoadingFullScreen from 'components/Common/LoadingFullScreen'\nimport GlobalModal from \"components/static/GlobalModal\";\nimport { maxNumberAfterDot } from \"utils/formatNumber\";\n// import { useActiveWeb3React } from 'hooks'\nimport useRefresh from \"hooks/useRefresh\";\nimport useWeb3ReactManager from \"hooks/useWeb3ReactManager\";\nimport React, { useEffect, useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { useAppDispatch } from \"state\";\nimport { useUserTokensInfo } from \"state/hook\";\nimport styled from \"styled-components\";\n\nimport Project from \"views/Project\";\nimport HomePage from \"views/HomePage\";\nimport Header from \"components/Header\";\n// import Footer from \"components/Footer\";\nimport \"./index.scss\";\nimport PageStaking from \"views/Staking\";\n\nfunction fakeRequest() {\n  return new Promise<void>((resolve) => setTimeout(() => resolve(), 1500));\n}\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    console.warn = () => null;\n  }, []);\n  const { account, chainId } = useWeb3React();\n\n  useWeb3ReactManager();\n\n  useEffect(() => {\n    if (chainId) {\n      window.localStorage.setItem(\"chainId\", chainId.toString());\n    }\n  }, [chainId]);\n\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fakeRequest().then(() => {\n      setLoading(!isLoading);\n    });\n  }, []);\n\n  const { fastRefresh } = useRefresh();\n  const dispatch = useAppDispatch();\n  const userTokensInfo = useUserTokensInfo();\n\n  useEffect(() => {\n    if (account) {\n      // dispatch(fetchUserToken(account));\n    }\n  }, [fastRefresh, account]);\n\n  return (\n    <HashRouter>\n      <Header\n        bnbBalance={maxNumberAfterDot(\n          utils.formatEther(userTokensInfo.dptBalance),\n          2\n        )}\n        busdBalance={maxNumberAfterDot(\n          utils.formatEther(userTokensInfo.dptBalance),\n          2\n        )}\n        dptBalance={maxNumberAfterDot(\n          utils.formatEther(userTokensInfo.dptBalance),\n          2\n        )}\n      />\n      {/* {(isLoading || isMobile) && <LoadingFullScreen />} */}\n      <FullScreenStyled>\n        <Space>\n          <Switch>\n            <Route path=\"/\" exact>\n              <HomePage />\n            </Route>\n            {/* <Route path=\"/detail/:id\" exact>\n              <PageDetail />\n            </Route> */}\n            <Route path=\"/project\" exact>\n              <Project />\n            </Route>\n            <Route path=\"/staking\" exact>\n              <PageStaking />\n            </Route>\n          </Switch>\n\n          <GlobalModal />\n        </Space>\n      </FullScreenStyled>\n      {/* <Footer/> */}\n    </HashRouter>\n  );\n};\n\nconst FullScreenStyled = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1400px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n\nconst Space = styled.div`\n  \n`;\nexport default React.memo(App);\n","import { useSelector } from \"react-redux\";\nimport { State } from \"./types\";\n\nexport const useUserTokensInfo = () => {\n  const userTokensInfo = useSelector(\n    (state: State) => state.staking.userData.userTokenData\n  );\n\n  return userTokensInfo;\n};\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@diviner-protocol/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { ModalProvider } from '@diviner-protocol/uikit'\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport React from 'react'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport store from 'state'\nimport getLibrary from 'utils/web3React'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot('NETWORK')\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Provider store={store}>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </Provider>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import \"antd/dist/antd.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Providers from \"./Providers\";\n\nif (\"ethereum\" in window) {\n  (window.ethereum as any).autoRefreshOnNetworkChange = false;\n}\n\nwindow.addEventListener(\"error\", () => {\n  localStorage?.removeItem(\"redux_localstorage_simple_lists\");\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}